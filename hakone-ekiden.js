const routes = [[
	[139.76442, 35.6875],
	[139.76389, 35.68754],
	[139.76213, 35.68164],
	[139.7599, 35.67522],
	[139.75769, 35.67309],
	[139.75552, 35.66963],
	[139.75371, 35.66565],
	[139.75067, 35.65923],
	[139.75009, 35.65608],
	[139.75004, 35.65505],
	[139.74967, 35.65272],
	[139.74924, 35.6501],
	[139.74897, 35.64843],
	[139.7488, 35.6475],
	[139.74613, 35.64624],
	[139.74397, 35.64494],
	[139.7429, 35.64384],
	[139.74225, 35.64282],
	[139.74161, 35.6417],
	[139.74093, 35.64018],
	[139.73948, 35.63754],
	[139.73858, 35.63517],
	[139.73818, 35.63392],
	[139.73777, 35.63233],
	[139.73763, 35.63062],
	[139.73758, 35.62862],
	[139.73772, 35.62709],
	[139.73826, 35.62494],
	[139.73805, 35.6239],
	[139.7381, 35.62348],
	[139.74006, 35.62045],
	[139.74053, 35.61973],
	[139.7409, 35.61873],
	[139.7412, 35.6161],
	[139.74119, 35.61497],
	[139.74204, 35.61148],
	[139.74248, 35.60975],
	[139.74321, 35.60679],
	[139.74312, 35.60638],
	[139.74074, 35.60353],
	[139.74031, 35.60294],
	[139.73994, 35.60225],
	[139.73896, 35.60014],
	[139.73667, 35.59522],
	[139.73651, 35.5948],
	[139.7364, 35.5943],
	[139.73635, 35.59339],
	[139.73633, 35.59229],
	[139.73619, 35.59135],
	[139.73604, 35.58965],
	[139.73595, 35.58717],
	[139.73644, 35.58449],
	[139.73666, 35.583],
	[139.73666, 35.58202],
	[139.73529, 35.57762],
	[139.7339, 35.57346],
	[139.73163, 35.57045],
	[139.72894, 35.56697],
	[139.72676, 35.56395],
	[139.72477, 35.56131],
	[139.72392, 35.56009],
	[139.72376, 35.55988],
	[139.72346, 35.55959],
	[139.7233, 35.55932],
	[139.72231, 35.55797],
	[139.72132, 35.55667],
	[139.72086, 35.55613],
	[139.7195, 35.55442],
	[139.71478, 35.5482],
	[139.71246, 35.54511],
	[139.71046, 35.54261],
	[139.70922, 35.54057],
	[139.70899, 35.53981],
	[139.70824, 35.5358],
	[139.70784, 35.5344],
	[139.70761, 35.53383],
	[139.7062, 35.53173],
	[139.70373, 35.52838],
	[139.70266, 35.52687],
	[139.70203, 35.52639],
	[139.69057, 35.52019],
	[139.68985, 35.51951],
	[139.68838, 35.51739],
	[139.68829, 35.51712],
	[139.68789, 35.51655],
	[139.68663, 35.51473],
	[139.68644, 35.51462],
	[139.68604, 35.51388],
	[139.685, 35.51232],
	[139.68421, 35.51143],
	[139.68366, 35.51073],
	[139.68166, 35.50845],
	[139.68083, 35.50749],
	[139.67945, 35.50562],
	[139.67909, 35.50528],
	[139.67869, 35.50501],
	[139.67378, 35.49936],
	[139.66988, 35.49603],
	[139.66648, 35.49322],
	[139.66435, 35.49201],
	[139.66289, 35.4911],
	[139.66071, 35.48943],
	[139.6581, 35.4879],
	[139.65769, 35.48757],
	[139.65711, 35.48699],
	[139.65659, 35.48665],
	[139.65618, 35.48645],
	[139.65573, 35.4863],
	[139.65266, 35.48539],
	[139.64905, 35.48487],
	[139.6467, 35.4845],
	[139.64563, 35.48407],
	[139.64421, 35.48325],
	[139.64341, 35.48266],
	[139.64247, 35.48207],
	[139.64132, 35.48134],
	[139.6404, 35.48054],
	[139.63942, 35.47963],
	[139.63585, 35.47596],
	[139.63327, 35.473],
	[139.63047, 35.47021],
	[139.62945, 35.4696],
	[139.62717, 35.46879],
	[139.62623, 35.46838],
	[139.62429, 35.46611],
	[139.62397, 35.46556],
	[139.62408, 35.46073],
	[139.62389, 35.46005],
	[139.62358, 35.45956],
	[139.62306, 35.45878],
	[139.62281, 35.45845],
	[139.62247, 35.4582],
	[139.61971, 35.45733],
	[139.61805, 35.45676],
	[139.61649, 35.45612],
	[139.615, 35.45542],
	[139.61257, 35.45423],
	[139.60784, 35.45213],
	[139.60471, 35.45076],
	[139.60359, 35.44992],
	[139.60242, 35.44888],
	[139.60061, 35.44684],
	[139.59958, 35.44584],
	[139.59897, 35.44548],
	[139.59628, 35.44372],
	[139.59539, 35.44408],
	[139.59121, 35.4449],
	[139.58945, 35.44531],
	[139.58834, 35.44547],
	[139.58684, 35.44545],
	[139.58409, 35.44496],
	[139.58277, 35.44499],
	[139.58066, 35.44532],
	[139.57956, 35.44535],
	[139.57842, 35.44518],
	[139.57786, 35.44489],
	[139.57736, 35.44442],
	[139.57604, 35.44219],
	[139.57574, 35.44175],
	[139.57522, 35.44119],
	[139.57505, 35.44079],
	[139.57504, 35.43928],
	[139.57515, 35.43894],
	[139.57567, 35.43833],
	[139.57591, 35.43799],
	[139.57632, 35.43636],
	[139.57628, 35.43513],
	[139.57577, 35.4339],
	[139.57574, 35.43313],
	[139.57571, 35.43269],
	[139.57515, 35.43165],
	[139.5744, 35.43038],
	[139.57391, 35.42967],
	[139.57339, 35.42911],
	[139.57268, 35.4286],
	[139.57199, 35.4282],
	[139.57103, 35.42746],
	[139.56981, 35.42608],
	[139.56941, 35.42572],
	[139.56764, 35.42494],
	[139.56707, 35.42458],
	[139.56625, 35.4237],
	[139.56496, 35.42223],
	[139.56422, 35.42168],
	[139.56253, 35.4206],
	[139.56191, 35.42039],
	[139.56068, 35.42037],
	[139.55989, 35.42049],
	[139.557, 35.42125],
	[139.55612, 35.4213],
	[139.55378, 35.42102],
	[139.55255, 35.4207],
	[139.55062, 35.4201],
	[139.54951, 35.41923],
	[139.54896, 35.41849],
	[139.54783, 35.41772],
	[139.54677, 35.4171],
	[139.54495, 35.41586],
	[139.54276, 35.41472],
	[139.53952, 35.41381],
	[139.53874, 35.41374],
	[139.53641, 35.41381],
	[139.53536, 35.41357],
	[139.53355, 35.4127],
	[139.53321, 35.41259],
	[139.53238, 35.41216],
	[139.53175, 35.41166],
	[139.53131, 35.41109],
	[139.53078, 35.40962],
	[139.53047, 35.40898],
	[139.52974, 35.40806],
	[139.52887, 35.40687],
	[139.52823, 35.40545],
	[139.52757, 35.40381],
	[139.52738, 35.40276],
	[139.52739, 35.40216],
	[139.52801, 35.39892],
	[139.52803, 35.39821],
	[139.52783, 35.39721],
	[139.52737, 35.39627],
	[139.52673, 35.39509],
	[139.52625, 35.39455],
	[139.52571, 35.39406],
	[139.52196, 35.39109],
	[139.52153, 35.39069],
	[139.52081, 35.38974],
	[139.52065, 35.38933],
	[139.52023, 35.38895],
	[139.51981, 35.38852],
	[139.51876, 35.38768],
	[139.51854, 35.38733],
	[139.51826, 35.38696],
	[139.51771, 35.38652],
	[139.517, 35.38548],
	[139.51668, 35.38516],
	[139.51636, 35.38496],
	[139.51563, 35.38469],
	[139.51525, 35.38445],
	[139.51498, 35.38401],
	[139.5146, 35.38312],
	[139.51427, 35.38268],
	[139.51386, 35.38236],
	[139.51336, 35.38215],
	[139.51291, 35.38183],
	[139.51265, 35.38149],
	[139.51242, 35.38097],
	[139.51208, 35.38061],
	[139.51143, 35.3801],
	[139.51037, 35.37958],
	[139.50892, 35.37891],
	[139.50764, 35.37822],
	[139.50634, 35.37761],
	[139.50573, 35.37724],
	[139.50525, 35.37686],
	[139.50491, 35.37647],
	[139.50342, 35.37423],
	[139.50175, 35.37172],
	[139.50073, 35.37005],
	[139.50008, 35.36875],
	[139.49914, 35.36702],
	[139.49787, 35.36505],
	[139.4972, 35.36368],
	[139.49571, 35.36193],
	[139.495, 35.36124],
	[139.49456, 35.36071],
	[139.49337, 35.3582],
	[139.49277, 35.35655],
	[139.49235, 35.35544],
	[139.49195, 35.35481],
	[139.49155, 35.35419],
	[139.49123, 35.35342],
	[139.49084, 35.35243],
	[139.49079, 35.35146],
	[139.49077, 35.35092],
	[139.49071, 35.35057],
	[139.49038, 35.34969],
	[139.48925, 35.34805],
	[139.48836, 35.34695],
	[139.48766, 35.34612],
	[139.48736, 35.34587],
	[139.4862, 35.34534],
	[139.48392, 35.34383],
	[139.4836, 35.34357],
	[139.48302, 35.34297],
	[139.48191, 35.34218],
	[139.48127, 35.34174],
	[139.47993, 35.34116],
	[139.47825, 35.34049],
	[139.47802, 35.34031],
	[139.47717, 35.33919],
	[139.47655, 35.33799],
	[139.4761, 35.33742],
	[139.47276, 35.33473],
	[139.47085, 35.33458],
	[139.46716, 35.33519],
	[139.46664, 35.33516],
	[139.46614, 35.33504],
	[139.46575, 35.33488],
	[139.46358, 35.3336],
	[139.45874, 35.3308],
	[139.45464, 35.32778],
	[139.45399, 35.32744],
	[139.45301, 35.32716],
	[139.44945, 35.32658],
	[139.44642, 35.32617],
	[139.4441, 35.32584],
	[139.44237, 35.32544],
	[139.44108, 35.32504],
	[139.43936, 35.32432],
	[139.43614, 35.32289],
	[139.43543, 35.32251],
	[139.43491, 35.32211],
	[139.43419, 35.32135],
	[139.43356, 35.32065],
	[139.43318, 35.32011],
	[139.43048, 35.31995],
	[139.42788, 35.31982],
	[139.42306, 35.31916],
	[139.41889, 35.3182],
	[139.41806, 35.31805],
	[139.41719, 35.31797],
	[139.41644, 35.31797],
	[139.41523, 35.31805],
	[139.41157, 35.31837],
	[139.40817, 35.31861],
	[139.40616, 35.31869],
	[139.40185, 35.31864],
	[139.39936, 35.31852],
	[139.39812, 35.31842],
	[139.39571, 35.31798],
	[139.39311, 35.31765],
	[139.39037, 35.31731],
	[139.38563, 35.31685],
	[139.3845, 35.31685],
	[139.38334, 35.31699],
	[139.38207, 35.31736],
	[139.38117, 35.31781],
	[139.37804, 35.3199],
	[139.37737, 35.32015],
	[139.37652, 35.32024],
	[139.37578, 35.32016],
	[139.37376, 35.31958],
	[139.36978, 35.31847],
	[139.36593, 35.31741],
	[139.36525, 35.3173],
	[139.36384, 35.31714],
	[139.36205, 35.31668],
	[139.3608, 35.31637],
	[139.35961, 35.31626],
	[139.35693, 35.31624],
	[139.35408, 35.3161],
	[139.3498, 35.31581],
	[139.34485, 35.31538],
	[139.3399, 35.31475],
	[139.33847, 35.31471],
	[139.33573, 35.3149],
	[139.33481, 35.31481],
	[139.33269, 35.31415],
	[139.332, 35.314],
	[139.33093, 35.31373],
	[139.32807, 35.31305],
	[139.32657, 35.3126],
	[139.32518, 35.31212],
	[139.32477, 35.31192],
	[139.32224, 35.31098],
	[139.32193, 35.31089],
	[139.32116, 35.3109],
	[139.31944, 35.3103],
	[139.31903, 35.31024],
	[139.31865, 35.31027],
	[139.31834, 35.31037],
	[139.3165, 35.31109],
	[139.31631, 35.31087],
	[139.31536, 35.30915],
	[139.31463, 35.30799],
	[139.31428, 35.30767],
	[139.31386, 35.30746],
	[139.31337, 35.30736],
	[139.31295, 35.30737],
	[139.31185, 35.30761],
	[139.31062, 35.30779],
	[139.30862, 35.30797],
	[139.30736, 35.30788],
	[139.3067, 35.30778],
	[139.30385, 35.30724],
	[139.30138, 35.30664],
	[139.29378, 35.3048],
	[139.29182, 35.30397],
	[139.29148, 35.30388],
	[139.29069, 35.30383],
	[139.28163, 35.30454],
	[139.27982, 35.30447],
	[139.27743, 35.30436],
	[139.27567, 35.30417],
	[139.27305, 35.30386],
	[139.27229, 35.30364],
	[139.27143, 35.30328],
	[139.26878, 35.30209],
	[139.26584, 35.30069],
	[139.26498, 35.30041],
	[139.26365, 35.29997],
	[139.26325, 35.29977],
	[139.26274, 35.29935],
	[139.26206, 35.29902],
	[139.25998, 35.2984],
	[139.25869, 35.29806],
	[139.25758, 35.29768],
	[139.25676, 35.29744],
	[139.25544, 35.29709],
	[139.25499, 35.29695],
	[139.25376, 35.2965],
	[139.25339, 35.29638],
	[139.25223, 35.29608],
	[139.24963, 35.2951],
	[139.24657, 35.29409],
	[139.246, 35.29386],
	[139.24467, 35.2932],
	[139.24367, 35.29274],
	[139.2425, 35.29231],
	[139.24164, 35.29206],
	[139.23941, 35.29144],
	[139.23879, 35.29115],
	[139.23819, 35.29071],
	[139.23744, 35.2898],
	[139.23703, 35.28959],
	[139.23642, 35.28942],
	[139.23588, 35.28923],
	[139.23266, 35.28767],
	[139.23098, 35.28648],
	[139.23041, 35.28619],
	[139.22889, 35.28567],
	[139.22796, 35.28521],
	[139.22623, 35.28443],
	[139.22565, 35.28423],
	[139.22415, 35.28391],
	[139.22305, 35.28366],
	[139.22269, 35.28353],
	[139.21991, 35.28192],
	[139.21946, 35.28172],
	[139.21887, 35.28154],
	[139.21825, 35.28124],
	[139.21773, 35.28107],
	[139.21578, 35.28082],
	[139.21441, 35.28043],
	[139.21266, 35.28013],
	[139.20758, 35.27934],
	[139.20593, 35.2788],
	[139.20495, 35.2784],
	[139.20445, 35.2781],
	[139.20405, 35.27771],
	[139.20341, 35.27677],
	[139.20317, 35.27635],
	[139.20289, 35.27581],
	[139.20176, 35.27433],
	[139.20126, 35.27384],
	[139.20032, 35.27302],
	[139.19973, 35.27258],
	[139.19712, 35.27073],
	[139.19575, 35.26984],
	[139.19434, 35.26899],
	[139.19295, 35.2682],
	[139.19135, 35.26749],
	[139.18997, 35.26696],
	[139.18795, 35.26625],
	[139.18363, 35.26496],
	[139.18311, 35.26477],
	[139.18271, 35.26455],
	[139.18207, 35.264],
	[139.18051, 35.26257],
	[139.17986, 35.26186],
	[139.17933, 35.26133],
	[139.17824, 35.26035],
	[139.17685, 35.2591],
	[139.17482, 35.25774],
	[139.17257, 35.2566],
	[139.17191, 35.25636],
	[139.1704, 35.25596],
	[139.16778, 35.25451],
	[139.16529, 35.25285],
	[139.1648, 35.2523],
	[139.16328, 35.25093],
	[139.1628, 35.25077],
	[139.15934, 35.25054],
	[139.15939, 35.24965],
	[139.15951, 35.24915],
	[139.15976, 35.24836],
	[139.15772, 35.24761],
	[139.15708, 35.24741],
	[139.15617, 35.24726],
	[139.15522, 35.24726],
	[139.1541, 35.2472],
	[139.1497, 35.24657],
	[139.14761, 35.24612],
	[139.14675, 35.24593],
	[139.14575, 35.24576],
	[139.14521, 35.24572],
	[139.14464, 35.24573],
	[139.14372, 35.24584],
	[139.14018, 35.24681],
	[139.13992, 35.24685],
	[139.13943, 35.24685],
	[139.1376, 35.24661],
	[139.13658, 35.24662],
	[139.1354, 35.24651],
	[139.135, 35.24651],
	[139.13321, 35.24689],
	[139.13266, 35.24691],
	[139.13211, 35.24682],
	[139.13162, 35.24663],
	[139.13038, 35.24591],
	[139.13032, 35.24577],
	[139.13014, 35.24567],
	[139.12999, 35.24568],
	[139.12155, 35.24073],
	[139.11864, 35.23904],
	[139.11813, 35.23868],
	[139.11712, 35.23782],
	[139.11588, 35.23698],
	[139.11544, 35.23651],
	[139.11464, 35.23556],
	[139.11426, 35.23505],
	[139.11334, 35.23451],
	[139.11239, 35.23415],
	[139.11102, 35.23379],
	[139.11021, 35.23364],
	[139.10945, 35.23363],
	[139.10882, 35.23377],
	[139.10832, 35.23393],
	[139.10765, 35.23403],
	[139.10676, 35.23394],
	[139.1055, 35.23382],
	[139.10445, 35.23357],
	[139.10398, 35.23336],
	[139.10354, 35.23298],
	[139.1032, 35.23264],
	[139.10286, 35.23239],
	[139.10237, 35.23206],
	[139.10206, 35.23189],
	[139.10144, 35.23174],
	[139.10072, 35.23162],
	[139.1003, 35.23171],
	[139.10004, 35.23192],
	[139.09993, 35.23196],
	[139.0995, 35.23193],
	[139.0993, 35.232],
	[139.09886, 35.23227],
	[139.09838, 35.23249],
	[139.09797, 35.23263],
	[139.09758, 35.23264],
	[139.09727, 35.23269],
	[139.09671, 35.23297],
	[139.09652, 35.23302],
	[139.09627, 35.23298],
	[139.09565, 35.23272],
	[139.09543, 35.23269],
	[139.09509, 35.23281],
	[139.09476, 35.23301],
	[139.09457, 35.23303],
	[139.09431, 35.23294],
	[139.0941, 35.23294],
	[139.09346, 35.2331],
	[139.09321, 35.23305],
	[139.09228, 35.2324],
	[139.09208, 35.23232],
	[139.09187, 35.2323],
	[139.09162, 35.23233],
	[139.09127, 35.23245],
	[139.09102, 35.23262],
	[139.09078, 35.2329],
	[139.09059, 35.23305],
	[139.09017, 35.23328],
	[139.08999, 35.23329],
	[139.08936, 35.23305],
	[139.08872, 35.23288],
	[139.08824, 35.23291],
	[139.08754, 35.23282],
	[139.08724, 35.23286],
	[139.08684, 35.23299],
	[139.08665, 35.23318],
	[139.08658, 35.23337],
	[139.08659, 35.23376],
	[139.08667, 35.23428],
	[139.0866, 35.23448],
	[139.08635, 35.23463],
	[139.08606, 35.23469],
	[139.08574, 35.23466],
	[139.0855, 35.23453],
	[139.0849, 35.23395],
	[139.08461, 35.23349],
	[139.08438, 35.23321],
	[139.084, 35.23297],
	[139.0838, 35.23293],
	[139.08324, 35.23302],
	[139.08304, 35.23295],
	[139.0828, 35.23275],
	[139.08266, 35.23274],
	[139.08254, 35.23281],
	[139.08239, 35.23307],
	[139.08226, 35.23317],
	[139.08209, 35.23317],
	[139.08184, 35.23308],
	[139.08163, 35.23307],
	[139.08092, 35.23343],
	[139.08076, 35.2336],
	[139.08079, 35.23378],
	[139.08097, 35.23385],
	[139.08141, 35.23379],
	[139.08169, 35.23389],
	[139.08183, 35.23406],
	[139.08182, 35.23425],
	[139.08173, 35.23448],
	[139.08153, 35.23457],
	[139.08037, 35.23472],
	[139.0802, 35.2347],
	[139.07975, 35.2345],
	[139.07953, 35.23443],
	[139.07928, 35.23439],
	[139.07904, 35.23441],
	[139.07889, 35.23452],
	[139.07883, 35.23473],
	[139.07894, 35.2351],
	[139.07891, 35.23525],
	[139.07857, 35.23544],
	[139.07851, 35.23557],
	[139.07869, 35.23585],
	[139.07868, 35.23603],
	[139.07833, 35.2363],
	[139.07791, 35.2365],
	[139.07761, 35.23652],
	[139.07712, 35.23646],
	[139.07693, 35.23652],
	[139.07661, 35.23696],
	[139.07663, 35.23709],
	[139.07679, 35.2372],
	[139.07691, 35.23733],
	[139.07689, 35.23755],
	[139.07672, 35.23774],
	[139.07645, 35.23788],
	[139.07614, 35.23817],
	[139.07564, 35.23835],
	[139.0753, 35.23858],
	[139.07508, 35.23868],
	[139.07481, 35.23873],
	[139.07438, 35.23894],
	[139.07388, 35.23906],
	[139.07369, 35.23911],
	[139.07345, 35.23936],
	[139.07321, 35.2396],
	[139.07291, 35.23986],
	[139.07272, 35.24],
	[139.07257, 35.24022],
	[139.07246, 35.24025],
	[139.07236, 35.2402],
	[139.07236, 35.24008],
	[139.07256, 35.23987],
	[139.07287, 35.23958],
	[139.07302, 35.23936],
	[139.07317, 35.23908],
	[139.07333, 35.23881],
	[139.07377, 35.23854],
	[139.07384, 35.23838],
	[139.07379, 35.2382],
	[139.0736, 35.23809],
	[139.07332, 35.23804],
	[139.0731, 35.23805],
	[139.0727, 35.23831],
	[139.07258, 35.23835],
	[139.07223, 35.23838],
	[139.07151, 35.2385],
	[139.07138, 35.23848],
	[139.07083, 35.23813],
	[139.07062, 35.23772],
	[139.07039, 35.23755],
	[139.0702, 35.2375],
	[139.06978, 35.23747],
	[139.06962, 35.23737],
	[139.06946, 35.23733],
	[139.06932, 35.23735],
	[139.06925, 35.23745],
	[139.0692, 35.23759],
	[139.06912, 35.23816],
	[139.06876, 35.23873],
	[139.0685, 35.23882],
	[139.06814, 35.23883],
	[139.06789, 35.23881],
	[139.0675, 35.23858],
	[139.06733, 35.23847],
	[139.06716, 35.23849],
	[139.06708, 35.23857],
	[139.06705, 35.23873],
	[139.06707, 35.23921],
	[139.06703, 35.2394],
	[139.06689, 35.23949],
	[139.06663, 35.23957],
	[139.06622, 35.23967],
	[139.06605, 35.23978],
	[139.06587, 35.24017],
	[139.06576, 35.2403],
	[139.06547, 35.24047],
	[139.06512, 35.24071],
	[139.06499, 35.24084],
	[139.06482, 35.24112],
	[139.06466, 35.24148],
	[139.06456, 35.24159],
	[139.06447, 35.24161],
	[139.06427, 35.24156],
	[139.06408, 35.24145],
	[139.06395, 35.24144],
	[139.06383, 35.2415],
	[139.06375, 35.24161],
	[139.06366, 35.24187],
	[139.06359, 35.24204],
	[139.06323, 35.24238],
	[139.0631, 35.24257],
	[139.06299, 35.24271],
	[139.06285, 35.24282],
	[139.06268, 35.24292],
	[139.06244, 35.24301],
	[139.0623, 35.24308],
	[139.06199, 35.24332],
	[139.06162, 35.24353],
	[139.06124, 35.24367],
	[139.06084, 35.24378],
	[139.06015, 35.24414],
	[139.0599, 35.24421],
	[139.05967, 35.24445],
	[139.05944, 35.24486],
	[139.05929, 35.24493],
	[139.05873, 35.24479],
	[139.05814, 35.24462],
	[139.05782, 35.2445],
	[139.05763, 35.24426],
	[139.05743, 35.24404],
	[139.05729, 35.24392],
	[139.05712, 35.24382],
	[139.05666, 35.24344],
	[139.05622, 35.24309],
	[139.056, 35.2428],
	[139.05574, 35.24249],
	[139.05573, 35.24219],
	[139.0558, 35.24161],
	[139.05578, 35.24145],
	[139.05568, 35.24123],
	[139.05544, 35.24085],
	[139.05541, 35.24069],
	[139.05554, 35.2404],
	[139.0555, 35.24029],
	[139.0554, 35.24021],
	[139.05526, 35.24023],
	[139.05514, 35.24034],
	[139.05495, 35.24101],
	[139.05494, 35.24121],
	[139.05485, 35.24129],
	[139.05465, 35.24133],
	[139.0544, 35.24134],
	[139.05421, 35.2413],
	[139.05389, 35.24111],
	[139.05372, 35.24107],
	[139.05351, 35.2411],
	[139.05318, 35.24119],
	[139.05298, 35.24122],
	[139.05286, 35.24118],
	[139.05283, 35.24106],
	[139.05304, 35.24068],
	[139.05318, 35.24054],
	[139.05354, 35.24042],
	[139.05416, 35.24048],
	[139.05428, 35.24045],
	[139.05435, 35.24038],
	[139.05434, 35.24028],
	[139.05398, 35.24002],
	[139.05388, 35.23999],
	[139.05376, 35.24],
	[139.05342, 35.24015],
	[139.05271, 35.24015],
	[139.05221, 35.24031],
	[139.05203, 35.24031],
	[139.05147, 35.2401],
	[139.0512, 35.23991],
	[139.05095, 35.23976],
	[139.0504, 35.23953],
	[139.05014, 35.23949],
	[139.04988, 35.2395],
	[139.04966, 35.23955],
	[139.04959, 35.23966],
	[139.04964, 35.23977],
	[139.04999, 35.23991],
	[139.05006, 35.24],
	[139.05006, 35.24009],
	[139.05001, 35.24019],
	[139.04984, 35.24042],
	[139.04972, 35.24054],
	[139.04935, 35.24085],
	[139.04896, 35.24115],
	[139.04856, 35.24134],
	[139.04808, 35.24148],
	[139.0477, 35.24152],
	[139.04707, 35.24152],
	[139.04694, 35.24149],
	[139.04687, 35.24142],
	[139.04683, 35.24134],
	[139.04685, 35.24123],
	[139.04715, 35.24094],
	[139.04721, 35.24082],
	[139.04732, 35.2403],
	[139.04748, 35.23997],
	[139.0475, 35.2398],
	[139.04746, 35.23968],
	[139.04738, 35.23959],
	[139.04649, 35.23917],
	[139.0464, 35.23905],
	[139.04638, 35.23887],
	[139.04642, 35.23877],
	[139.04719, 35.23712],
	[139.04767, 35.2361],
	[139.04771, 35.23587],
	[139.04767, 35.23548],
	[139.04784, 35.23506],
	[139.04813, 35.23475],
	[139.04886, 35.23417],
	[139.04932, 35.23371],
	[139.04932, 35.23278],
	[139.04929, 35.23248],
	[139.04911, 35.23223],
	[139.04882, 35.23183],
	[139.04877, 35.23171],
	[139.04882, 35.23162],
	[139.04894, 35.23154],
	[139.04915, 35.23156],
	[139.04928, 35.23163],
	[139.04943, 35.23175],
	[139.04956, 35.23178],
	[139.04977, 35.23176],
	[139.05041, 35.2316],
	[139.05062, 35.23152],
	[139.05084, 35.23137],
	[139.05089, 35.23125],
	[139.05081, 35.23112],
	[139.05051, 35.23083],
	[139.05036, 35.23073],
	[139.05021, 35.2307],
	[139.05007, 35.23073],
	[139.04979, 35.23101],
	[139.04967, 35.23104],
	[139.04954, 35.23101],
	[139.04947, 35.23092],
	[139.0494, 35.23031],
	[139.04927, 35.23013],
	[139.04884, 35.22973],
	[139.04876, 35.22957],
	[139.04874, 35.22942],
	[139.04884, 35.22884],
	[139.04889, 35.22865],
	[139.04931, 35.22821],
	[139.04941, 35.22797],
	[139.04941, 35.22759],
	[139.04932, 35.22662],
	[139.04904, 35.22539],
	[139.04894, 35.22507],
	[139.04882, 35.225],
	[139.0487, 35.22499],
	[139.04859, 35.22504],
	[139.04854, 35.22515],
	[139.04855, 35.22535],
	[139.04864, 35.22573],
	[139.04873, 35.22611],
	[139.04871, 35.22623],
	[139.04865, 35.22632],
	[139.04845, 35.22636],
	[139.04834, 35.22631],
	[139.04818, 35.22605],
	[139.04803, 35.2257],
	[139.04785, 35.22527],
	[139.0477, 35.22494],
	[139.04739, 35.22474],
	[139.04706, 35.22456],
	[139.04695, 35.22444],
	[139.04694, 35.22427],
	[139.04728, 35.22378],
	[139.04762, 35.22336],
	[139.04773, 35.22327],
	[139.04802, 35.22316],
	[139.04844, 35.22307],
	[139.04941, 35.22246],
	[139.04961, 35.22243],
	[139.04993, 35.22248],
	[139.05069, 35.2227],
	[139.05084, 35.22264],
	[139.05089, 35.22251],
	[139.05078, 35.22218],
	[139.05078, 35.22204],
	[139.05084, 35.22191],
	[139.05124, 35.22157],
	[139.05127, 35.22143],
	[139.05122, 35.22133],
	[139.05113, 35.22128],
	[139.05095, 35.22128],
	[139.04928, 35.22173],
	[139.04884, 35.2218],
	[139.0484, 35.22184],
	[139.04819, 35.2218],
	[139.04809, 35.22165],
	[139.04811, 35.22151],
	[139.04832, 35.22115],
	[139.04837, 35.22099],
	[139.0483, 35.22081],
	[139.04814, 35.22065],
	[139.0479, 35.22061],
	[139.0477, 35.22064],
	[139.04753, 35.22074],
	[139.04718, 35.22113],
	[139.04683, 35.22128],
	[139.04576, 35.22131],
	[139.04549, 35.22124],
	[139.04445, 35.22071],
	[139.04339, 35.22022],
	[139.04088, 35.21905],
	[139.03962, 35.2182],
	[139.03866, 35.21767],
	[139.0385, 35.21747],
	[139.03833, 35.21701],
	[139.03815, 35.21674],
	[139.03787, 35.21643],
	[139.0372, 35.21595],
	[139.03704, 35.21576],
	[139.03702, 35.21547],
	[139.03697, 35.21533],
	[139.03681, 35.21518],
	[139.03651, 35.21496],
	[139.03639, 35.21475],
	[139.03615, 35.21339],
	[139.03612, 35.21308],
	[139.0362, 35.21276],
	[139.03646, 35.21208],
	[139.0365, 35.2119],
	[139.03647, 35.2113],
	[139.03651, 35.21112],
	[139.0367, 35.2108],
	[139.03678, 35.21055],
	[139.03684, 35.21004],
	[139.03693, 35.20988],
	[139.03709, 35.20976],
	[139.0379, 35.20957],
	[139.03816, 35.2094],
	[139.03839, 35.20912],
	[139.03852, 35.20878],
	[139.03848, 35.20848],
	[139.03829, 35.20819],
	[139.038, 35.20801],
	[139.03604, 35.20739],
	[139.03508, 35.20717],
	[139.03467, 35.20704],
	[139.03436, 35.20688],
	[139.03318, 35.20623],
	[139.03244, 35.20583],
	[139.03215, 35.20562],
	[139.03206, 35.20544],
	[139.03209, 35.20528],
	[139.03219, 35.20512],
	[139.03243, 35.20502],
	[139.03267, 35.20499],
	[139.03298, 35.20503],
	[139.03381, 35.20521],
	[139.03437, 35.20542],
	[139.0345, 35.20538],
	[139.03455, 35.20527],
	[139.03443, 35.20513],
	[139.03421, 35.20491],
	[139.03391, 35.20454],
	[139.0337, 35.20444],
	[139.03317, 35.2044],
	[139.0325, 35.20444],
	[139.03224, 35.20446],
	[139.03216, 35.2044],
	[139.03218, 35.20431],
	[139.03257, 35.20424],
	[139.03301, 35.20412],
	[139.03352, 35.20413],
	[139.03361, 35.20405],
	[139.03354, 35.20391],
	[139.03323, 35.20371],
	[139.03305, 35.20356],
	[139.03272, 35.20337],
	[139.03171, 35.20306],
	[139.03163, 35.20293],
	[139.0316, 35.20274],
	[139.03124, 35.20222],
	[139.0311, 35.20191],
	[139.03089, 35.20101],
	[139.03049, 35.20019],
	[139.02989, 35.19923],
	[139.02967, 35.19895],
	[139.02961, 35.19878],
	[139.02952, 35.19821],
	[139.02937, 35.19791],
	[139.02901, 35.19749],
	[139.0289, 35.19722],
	[139.02884, 35.19629],
	[139.02869, 35.196],
	[139.02816, 35.19551],
	[139.02784, 35.195],
	[139.02777, 35.1948],
	[139.02772, 35.19446],
	[139.02762, 35.19426],
	[139.02712, 35.19364],
	[139.02704, 35.19339],
	[139.02703, 35.19317],
	[139.02748, 35.19193],
	[139.0275, 35.1917],
	[139.02739, 35.19147],
	[139.02672, 35.19074],
	[139.02503, 35.18904],
	[139.02464, 35.18929],
	[139.02447, 35.18941]
], [
	[139.02465, 35.18929],
	[139.02502, 35.18905],
	[139.02673, 35.19076],
	[139.0274, 35.19151],
	[139.0275, 35.19173],
	[139.02747, 35.19194],
	[139.02702, 35.19317],
	[139.02707, 35.19358],
	[139.02742, 35.19403],
	[139.0277, 35.19445],
	[139.02778, 35.19489],
	[139.02813, 35.19548],
	[139.02869, 35.196],
	[139.0288, 35.19623],
	[139.02885, 35.19642],
	[139.0289, 35.19724],
	[139.029, 35.19749],
	[139.02942, 35.198],
	[139.02953, 35.19833],
	[139.02964, 35.19889],
	[139.02977, 35.1991],
	[139.02994, 35.19932],
	[139.03048, 35.2002],
	[139.03087, 35.20099],
	[139.03111, 35.20196],
	[139.03125, 35.20225],
	[139.03159, 35.20273],
	[139.03164, 35.20303],
	[139.03261, 35.20334],
	[139.03293, 35.20349],
	[139.03349, 35.20389],
	[139.0336, 35.20404],
	[139.0335, 35.20412],
	[139.03294, 35.20413],
	[139.03252, 35.20425],
	[139.03216, 35.20431],
	[139.03213, 35.20441],
	[139.03222, 35.20447],
	[139.03304, 35.20442],
	[139.03364, 35.20445],
	[139.03386, 35.20452],
	[139.03452, 35.20528],
	[139.03447, 35.20539],
	[139.03432, 35.2054],
	[139.03375, 35.20518],
	[139.0328, 35.20499],
	[139.0325, 35.205],
	[139.03222, 35.20509],
	[139.0321, 35.20525],
	[139.03205, 35.20545],
	[139.0322, 35.20568],
	[139.03317, 35.20624],
	[139.03467, 35.20705],
	[139.03596, 35.20738],
	[139.03803, 35.20803],
	[139.03835, 35.20829],
	[139.03849, 35.20857],
	[139.0385, 35.20884],
	[139.03837, 35.20913],
	[139.03819, 35.20936],
	[139.03802, 35.2095],
	[139.03711, 35.20975],
	[139.03691, 35.20989],
	[139.03681, 35.21009],
	[139.03675, 35.21067],
	[139.03645, 35.21125],
	[139.03648, 35.21191],
	[139.03613, 35.21295],
	[139.03611, 35.2133],
	[139.03643, 35.21488],
	[139.03687, 35.21525],
	[139.03698, 35.21542],
	[139.03702, 35.21574],
	[139.03714, 35.21592],
	[139.03784, 35.21641],
	[139.03811, 35.21672],
	[139.03831, 35.21699],
	[139.0385, 35.21751],
	[139.03869, 35.21771],
	[139.03942, 35.2181],
	[139.04039, 35.21875],
	[139.041, 35.21913],
	[139.04322, 35.22016],
	[139.04539, 35.22122],
	[139.04573, 35.22132],
	[139.04671, 35.2213],
	[139.04703, 35.22122],
	[139.04722, 35.22112],
	[139.04763, 35.22069],
	[139.04788, 35.22062],
	[139.04813, 35.22067],
	[139.04827, 35.22078],
	[139.04835, 35.22096],
	[139.04833, 35.22111],
	[139.04808, 35.22152],
	[139.0481, 35.22171],
	[139.04824, 35.22183],
	[139.04846, 35.22185],
	[139.04916, 35.22178],
	[139.05095, 35.22129],
	[139.0511, 35.2213],
	[139.05121, 35.22135],
	[139.05126, 35.22148],
	[139.05123, 35.22157],
	[139.0508, 35.22194],
	[139.05076, 35.22217],
	[139.05087, 35.22251],
	[139.05081, 35.22264],
	[139.05067, 35.22268],
	[139.04974, 35.22242],
	[139.04954, 35.22242],
	[139.04942, 35.22245],
	[139.04853, 35.22302],
	[139.04794, 35.22318],
	[139.04768, 35.22329],
	[139.04748, 35.22349],
	[139.04716, 35.22392],
	[139.04692, 35.22431],
	[139.04694, 35.22445],
	[139.04709, 35.22458],
	[139.04772, 35.22497],
	[139.04809, 35.22589],
	[139.04827, 35.22624],
	[139.04837, 35.22636],
	[139.04858, 35.22636],
	[139.04871, 35.22627],
	[139.04875, 35.22609],
	[139.04867, 35.22577],
	[139.04856, 35.22534],
	[139.04854, 35.22513],
	[139.0486, 35.22504],
	[139.0487, 35.225],
	[139.04884, 35.22501],
	[139.04894, 35.22509],
	[139.04904, 35.22542],
	[139.04913, 35.22585],
	[139.0493, 35.22662],
	[139.04937, 35.22738],
	[139.04939, 35.22797],
	[139.04926, 35.22824],
	[139.04885, 35.22868],
	[139.04872, 35.22945],
	[139.0488, 35.2297],
	[139.0493, 35.23017],
	[139.04939, 35.23032],
	[139.04942, 35.23047],
	[139.04944, 35.23087],
	[139.04951, 35.23098],
	[139.04963, 35.23104],
	[139.04978, 35.23102],
	[139.05005, 35.23076],
	[139.05013, 35.23072],
	[139.05024, 35.23072],
	[139.05042, 35.23076],
	[139.05084, 35.23118],
	[139.05088, 35.23128],
	[139.05076, 35.23143],
	[139.0505, 35.23157],
	[139.04996, 35.23171],
	[139.04963, 35.23177],
	[139.04946, 35.23176],
	[139.04922, 35.23158],
	[139.04905, 35.23153],
	[139.0489, 35.23154],
	[139.04876, 35.23168],
	[139.04878, 35.23182],
	[139.04923, 35.23242],
	[139.04928, 35.23267],
	[139.04931, 35.23317],
	[139.0493, 35.2337],
	[139.04886, 35.23417],
	[139.04842, 35.23449],
	[139.04797, 35.23488],
	[139.04782, 35.23506],
	[139.04767, 35.23541],
	[139.04765, 35.23554],
	[139.04769, 35.236],
	[139.04718, 35.23714],
	[139.04636, 35.23886],
	[139.04638, 35.23905],
	[139.04648, 35.23919],
	[139.0474, 35.23962],
	[139.04749, 35.23976],
	[139.04745, 35.23996],
	[139.04728, 35.24038],
	[139.04718, 35.24087],
	[139.04684, 35.24124],
	[139.04684, 35.24141],
	[139.047, 35.24152],
	[139.04728, 35.24154],
	[139.04771, 35.24154],
	[139.04809, 35.24149],
	[139.04868, 35.24132],
	[139.04919, 35.241],
	[139.04956, 35.2407],
	[139.04979, 35.24051],
	[139.04994, 35.24031],
	[139.05006, 35.24013],
	[139.05008, 35.24002],
	[139.05, 35.2399],
	[139.04966, 35.23975],
	[139.0496, 35.23968],
	[139.04962, 35.23959],
	[139.04973, 35.23953],
	[139.04995, 35.2395],
	[139.05029, 35.23951],
	[139.05097, 35.23977],
	[139.05122, 35.23992],
	[139.05149, 35.24012],
	[139.05202, 35.24031],
	[139.05219, 35.24031],
	[139.05273, 35.24016],
	[139.05342, 35.24015],
	[139.05379, 35.24],
	[139.05391, 35.24001],
	[139.05415, 35.24015],
	[139.05433, 35.24032],
	[139.05432, 35.24041],
	[139.05421, 35.24048],
	[139.05362, 35.24041],
	[139.05347, 35.24043],
	[139.05317, 35.24051],
	[139.05306, 35.24062],
	[139.05282, 35.24109],
	[139.05285, 35.24119],
	[139.05302, 35.24123],
	[139.05365, 35.24108],
	[139.05385, 35.24111],
	[139.05416, 35.24128],
	[139.05441, 35.24135],
	[139.05482, 35.24131],
	[139.05495, 35.2412],
	[139.05497, 35.24101],
	[139.05517, 35.24032],
	[139.05529, 35.24025],
	[139.05548, 35.24027],
	[139.05554, 35.24037],
	[139.0555, 35.24047],
	[139.05539, 35.24069],
	[139.05543, 35.24085],
	[139.05569, 35.24125],
	[139.0558, 35.24161],
	[139.05571, 35.24232],
	[139.05575, 35.24252],
	[139.05624, 35.24313],
	[139.05714, 35.24385],
	[139.05741, 35.24404],
	[139.05763, 35.24428],
	[139.05783, 35.24453],
	[139.05928, 35.24494],
	[139.05943, 35.24487],
	[139.05953, 35.24475],
	[139.05968, 35.24445],
	[139.0599, 35.24422],
	[139.06015, 35.24414],
	[139.06074, 35.24384],
	[139.06143, 35.24361],
	[139.06175, 35.24348],
	[139.06206, 35.24328],
	[139.06235, 35.24305],
	[139.06269, 35.24292],
	[139.06301, 35.24272],
	[139.06325, 35.24236],
	[139.06357, 35.24207],
	[139.06371, 35.24179],
	[139.0638, 35.24158],
	[139.06394, 35.24148],
	[139.06409, 35.24148],
	[139.06445, 35.24163],
	[139.06459, 35.2416],
	[139.06467, 35.24148],
	[139.06499, 35.24086],
	[139.06517, 35.24069],
	[139.06582, 35.24027],
	[139.06605, 35.23981],
	[139.06615, 35.23972],
	[139.06694, 35.23948],
	[139.06707, 35.23936],
	[139.06708, 35.23867],
	[139.06716, 35.23852],
	[139.06741, 35.23853],
	[139.06781, 35.23878],
	[139.06803, 35.23884],
	[139.06857, 35.23882],
	[139.06871, 35.23877],
	[139.06882, 35.23867],
	[139.06913, 35.23815],
	[139.06923, 35.23756],
	[139.06928, 35.2374],
	[139.06939, 35.23733],
	[139.06954, 35.23735],
	[139.06979, 35.23748],
	[139.07028, 35.23752],
	[139.07044, 35.23759],
	[139.07062, 35.23774],
	[139.07081, 35.23813],
	[139.07132, 35.23848],
	[139.07149, 35.23851],
	[139.07228, 35.23838],
	[139.07263, 35.23835],
	[139.07314, 35.23806],
	[139.07347, 35.23809],
	[139.07371, 35.23815],
	[139.07383, 35.23831],
	[139.07376, 35.23854],
	[139.0733, 35.23884],
	[139.07303, 35.23935],
	[139.07287, 35.23958],
	[139.0727, 35.23975],
	[139.07238, 35.24005],
	[139.07234, 35.24014],
	[139.07236, 35.24024],
	[139.07247, 35.24028],
	[139.07256, 35.24027],
	[139.07268, 35.24011],
	[139.07287, 35.2399],
	[139.07321, 35.23963],
	[139.07368, 35.23912],
	[139.07438, 35.23896],
	[139.07479, 35.23875],
	[139.07526, 35.23861],
	[139.07567, 35.23835],
	[139.07612, 35.2382],
	[139.07641, 35.23793],
	[139.07685, 35.23764],
	[139.07692, 35.2375],
	[139.07691, 35.23732],
	[139.07667, 35.23711],
	[139.07663, 35.23696],
	[139.07691, 35.23654],
	[139.07704, 35.23649],
	[139.0772, 35.23648],
	[139.07763, 35.23654],
	[139.07791, 35.23651],
	[139.07815, 35.23641],
	[139.07865, 35.23608],
	[139.07872, 35.2359],
	[139.07853, 35.23558],
	[139.07856, 35.23546],
	[139.07889, 35.23528],
	[139.07896, 35.23512],
	[139.07885, 35.23469],
	[139.07892, 35.2345],
	[139.07906, 35.23442],
	[139.07924, 35.2344],
	[139.07953, 35.23444],
	[139.08029, 35.23474],
	[139.08138, 35.2346],
	[139.08165, 35.23454],
	[139.08177, 35.23444],
	[139.08184, 35.23423],
	[139.08182, 35.23402],
	[139.08171, 35.2339],
	[139.08145, 35.23379],
	[139.0813, 35.23379],
	[139.08098, 35.23385],
	[139.0808, 35.23377],
	[139.08078, 35.23362],
	[139.08108, 35.23335],
	[139.08161, 35.23309],
	[139.08182, 35.23308],
	[139.08216, 35.23319],
	[139.08236, 35.23313],
	[139.08254, 35.23281],
	[139.08268, 35.23275],
	[139.08282, 35.23277],
	[139.083, 35.23294],
	[139.08322, 35.23303],
	[139.08384, 35.23294],
	[139.08399, 35.23296],
	[139.08444, 35.23326],
	[139.08484, 35.23387],
	[139.08542, 35.23446],
	[139.08571, 35.23465],
	[139.08598, 35.23471],
	[139.08618, 35.2347],
	[139.08657, 35.23452],
	[139.08665, 35.23443],
	[139.08669, 35.23431],
	[139.08661, 35.23375],
	[139.08662, 35.23332],
	[139.08669, 35.23315],
	[139.08686, 35.23299],
	[139.08726, 35.23287],
	[139.08758, 35.23283],
	[139.08827, 35.23292],
	[139.08877, 35.23289],
	[139.0891, 35.23298],
	[139.09002, 35.2333],
	[139.09025, 35.23325],
	[139.0907, 35.23298],
	[139.09102, 35.23265],
	[139.09121, 35.2325],
	[139.09145, 35.23238],
	[139.09184, 35.23231],
	[139.09212, 35.23235],
	[139.0924, 35.23249],
	[139.09319, 35.23306],
	[139.09335, 35.23311],
	[139.09355, 35.23309],
	[139.0941, 35.23295],
	[139.09427, 35.23294],
	[139.09459, 35.23305],
	[139.09476, 35.23304],
	[139.09502, 35.23287],
	[139.09529, 35.23274],
	[139.09551, 35.2327],
	[139.0957, 35.23274],
	[139.09627, 35.23299],
	[139.09649, 35.23302],
	[139.09666, 35.23301],
	[139.09721, 35.23273],
	[139.09743, 35.23267],
	[139.09791, 35.23265],
	[139.09813, 35.23259],
	[139.09876, 35.23234],
	[139.09913, 35.2321],
	[139.09935, 35.23206],
	[139.0998, 35.23206],
	[139.09999, 35.23199],
	[139.10026, 35.23176],
	[139.10045, 35.23167],
	[139.10075, 35.23164],
	[139.10164, 35.23179],
	[139.10209, 35.23191],
	[139.10266, 35.23227],
	[139.10321, 35.23267],
	[139.10377, 35.23323],
	[139.10412, 35.23346],
	[139.10453, 35.2336],
	[139.10555, 35.23385],
	[139.10754, 35.23403],
	[139.1078, 35.23402],
	[139.10857, 35.23387],
	[139.10925, 35.23367],
	[139.11003, 35.23364],
	[139.11062, 35.23373],
	[139.1114, 35.2339],
	[139.11204, 35.23405],
	[139.11293, 35.23453],
	[139.11381, 35.23495],
	[139.11429, 35.23522],
	[139.11466, 35.2356],
	[139.11547, 35.23657],
	[139.11592, 35.23705],
	[139.11725, 35.23795],
	[139.11814, 35.23873],
	[139.11865, 35.23907],
	[139.12154, 35.24075],
	[139.12607, 35.24341],
	[139.12811, 35.24461],
	[139.13006, 35.24579],
	[139.1316, 35.24664],
	[139.13225, 35.24687],
	[139.13273, 35.24693],
	[139.13312, 35.24691],
	[139.13517, 35.2465],
	[139.13643, 35.24662],
	[139.13757, 35.24662],
	[139.13973, 35.24687],
	[139.14023, 35.24682],
	[139.14353, 35.2459],
	[139.14449, 35.24575],
	[139.14513, 35.24574],
	[139.14582, 35.24579],
	[139.15001, 35.24667],
	[139.15413, 35.24725],
	[139.15634, 35.24733],
	[139.15718, 35.24749],
	[139.15972, 35.24838],
	[139.15948, 35.24909],
	[139.15936, 35.24965],
	[139.15929, 35.2506],
	[139.1627, 35.25078],
	[139.16313, 35.25088],
	[139.16331, 35.25101],
	[139.16493, 35.25248],
	[139.16527, 35.2529],
	[139.16776, 35.25456],
	[139.17037, 35.25598],
	[139.172, 35.25641],
	[139.17258, 35.25663],
	[139.17484, 35.25778],
	[139.1769, 35.25918],
	[139.1782, 35.26034],
	[139.1795, 35.26151],
	[139.18062, 35.2627],
	[139.18259, 35.26448],
	[139.18298, 35.26472],
	[139.18351, 35.26494],
	[139.18795, 35.26627],
	[139.19098, 35.26736],
	[139.19227, 35.26789],
	[139.19379, 35.26868],
	[139.19513, 35.26947],
	[139.19696, 35.27062],
	[139.19936, 35.27233],
	[139.20042, 35.27312],
	[139.20154, 35.27412],
	[139.20202, 35.27469],
	[139.20285, 35.2758],
	[139.20344, 35.27689],
	[139.20415, 35.27785],
	[139.20446, 35.27815],
	[139.20516, 35.27859],
	[139.20759, 35.27936],
	[139.21267, 35.28016],
	[139.21362, 35.28031],
	[139.21456, 35.28049],
	[139.21578, 35.28083],
	[139.21747, 35.28106],
	[139.21795, 35.28116],
	[139.21834, 35.28129],
	[139.21896, 35.28158],
	[139.21961, 35.28181],
	[139.21992, 35.28194],
	[139.22265, 35.28352],
	[139.22312, 35.28371],
	[139.22571, 35.28427],
	[139.22616, 35.28442],
	[139.22803, 35.28527],
	[139.22888, 35.28569],
	[139.23043, 35.28621],
	[139.23099, 35.2865],
	[139.23249, 35.28758],
	[139.23301, 35.28787],
	[139.23588, 35.28924],
	[139.23631, 35.28941],
	[139.23702, 35.28961],
	[139.23742, 35.28982],
	[139.23811, 35.29065],
	[139.23863, 35.29107],
	[139.23914, 35.29135],
	[139.23953, 35.29149],
	[139.24103, 35.29189],
	[139.24283, 35.29244],
	[139.24336, 35.29264],
	[139.24381, 35.29281],
	[139.24602, 35.29387],
	[139.24658, 35.29411],
	[139.24983, 35.2952],
	[139.25223, 35.29609],
	[139.25346, 35.29642],
	[139.25408, 35.29662],
	[139.25514, 35.29702],
	[139.25727, 35.29761],
	[139.25866, 35.29807],
	[139.26004, 35.29843],
	[139.26206, 35.29906],
	[139.26263, 35.29931],
	[139.26327, 35.29981],
	[139.26368, 35.3],
	[139.26584, 35.3007],
	[139.26886, 35.30216],
	[139.27217, 35.30361],
	[139.27269, 35.30379],
	[139.27322, 35.30391],
	[139.27369, 35.30397],
	[139.27747, 35.3044],
	[139.28082, 35.30453],
	[139.28174, 35.30454],
	[139.29075, 35.30384],
	[139.2915, 35.30391],
	[139.29173, 35.30395],
	[139.29378, 35.30481],
	[139.30142, 35.30666],
	[139.3033, 35.30715],
	[139.30342, 35.30722],
	[139.30391, 35.30734],
	[139.30737, 35.30799],
	[139.30769, 35.30802],
	[139.30823, 35.30799],
	[139.30902, 35.30797],
	[139.31094, 35.30777],
	[139.31185, 35.30763],
	[139.31294, 35.30739],
	[139.31332, 35.30737],
	[139.31356, 35.3074],
	[139.31389, 35.30748],
	[139.31429, 35.30768],
	[139.3146, 35.30797],
	[139.31535, 35.30916],
	[139.31629, 35.31089],
	[139.31645, 35.31111],
	[139.31682, 35.3115],
	[139.31973, 35.31365],
	[139.32096, 35.31457],
	[139.32195, 35.31532],
	[139.32196, 35.31548],
	[139.32229, 35.31602],
	[139.32261, 35.31643],
	[139.32281, 35.31664],
	[139.32322, 35.31689],
	[139.32371, 35.31697],
	[139.32628, 35.31692],
	[139.32735, 35.31688],
	[139.328, 35.31677],
	[139.3285, 35.31657],
	[139.32892, 35.31629],
	[139.32917, 35.31601],
	[139.32939, 35.31569],
	[139.32996, 35.31469],
	[139.33015, 35.31444],
	[139.33044, 35.31423],
	[139.33073, 35.31407],
	[139.33104, 35.31386],
	[139.33285, 35.31439],
	[139.33451, 35.31493],
	[139.33513, 35.315],
	[139.33556, 35.315],
	[139.33802, 35.3148],
	[139.33919, 35.3148],
	[139.34025, 35.31489],
	[139.3436, 35.31529],
	[139.34494, 35.31549],
	[139.34926, 35.31587],
	[139.35154, 35.31599],
	[139.35407, 35.31619],
	[139.35675, 35.3163],
	[139.35933, 35.31632],
	[139.36003, 35.31636],
	[139.36091, 35.3165],
	[139.36206, 35.31682],
	[139.36349, 35.3172],
	[139.36565, 35.31746],
	[139.36647, 35.31764],
	[139.36667, 35.31773],
	[139.37046, 35.31876],
	[139.37379, 35.3197],
	[139.37537, 35.32016],
	[139.37609, 35.32031],
	[139.37693, 35.3203],
	[139.37758, 35.32017],
	[139.37808, 35.31997],
	[139.38103, 35.318],
	[139.3816, 35.31768],
	[139.38216, 35.31744],
	[139.38307, 35.31715],
	[139.38377, 35.317],
	[139.38461, 35.31691],
	[139.38565, 35.31694],
	[139.38701, 35.31708],
	[139.39054, 35.31743],
	[139.39151, 35.31752],
	[139.39314, 35.31773],
	[139.39612, 35.31814],
	[139.39782, 35.31845],
	[139.39884, 35.31858],
	[139.39941, 35.31863],
	[139.4018, 35.31871],
	[139.40621, 35.31879],
	[139.40725, 35.31877],
	[139.40809, 35.3187],
	[139.41156, 35.31844],
	[139.41624, 35.31807],
	[139.41727, 35.31808],
	[139.41779, 35.31812],
	[139.41863, 35.31824],
	[139.42307, 35.31923],
	[139.4279, 35.31989],
	[139.43125, 35.32008],
	[139.43288, 35.32022],
	[139.43316, 35.32032],
	[139.43427, 35.32157],
	[139.43495, 35.32226],
	[139.43566, 35.32275],
	[139.43927, 35.32436],
	[139.44026, 35.3248],
	[139.44131, 35.32519],
	[139.44256, 35.32556],
	[139.44393, 35.32589],
	[139.44506, 35.32606],
	[139.4508, 35.32685],
	[139.45301, 35.3272],
	[139.45386, 35.32741],
	[139.45454, 35.32774],
	[139.45868, 35.3308],
	[139.46347, 35.33357],
	[139.46575, 35.33491],
	[139.46623, 35.3351],
	[139.46677, 35.3352],
	[139.46739, 35.33517],
	[139.4708, 35.33461],
	[139.47148, 35.33461],
	[139.47213, 35.33467],
	[139.47263, 35.33473],
	[139.47289, 35.33486],
	[139.47373, 35.33553],
	[139.47454, 35.33618],
	[139.47608, 35.33744],
	[139.47653, 35.33799],
	[139.47712, 35.33917],
	[139.47808, 35.3404],
	[139.47858, 35.34066],
	[139.47991, 35.34119],
	[139.48122, 35.34174],
	[139.48249, 35.34261],
	[139.48303, 35.34301],
	[139.48357, 35.34358],
	[139.48384, 35.3438],
	[139.48627, 35.3454],
	[139.4869, 35.34571],
	[139.48742, 35.34593],
	[139.48769, 35.3462],
	[139.4883, 35.34694],
	[139.48923, 35.34806],
	[139.49006, 35.34925],
	[139.49039, 35.34974],
	[139.49071, 35.35059],
	[139.49075, 35.35094],
	[139.49078, 35.35219],
	[139.49082, 35.35249],
	[139.49098, 35.35292],
	[139.49158, 35.35427],
	[139.49232, 35.35546],
	[139.49321, 35.35783],
	[139.49349, 35.35848],
	[139.49434, 35.36028],
	[139.49448, 35.36062],
	[139.49479, 35.3613],
	[139.49498, 35.36158],
	[139.49701, 35.36379],
	[139.4972, 35.36404],
	[139.4977, 35.36492],
	[139.49915, 35.36719],
	[139.50003, 35.36883],
	[139.50055, 35.36994],
	[139.50091, 35.37062],
	[139.50165, 35.37181],
	[139.50347, 35.37457],
	[139.50407, 35.37563],
	[139.50477, 35.37669],
	[139.50526, 35.37725],
	[139.50583, 35.3776],
	[139.50777, 35.37852],
	[139.50823, 35.3787],
	[139.50927, 35.37914],
	[139.51115, 35.38002],
	[139.5118, 35.38045],
	[139.51234, 35.381],
	[139.51246, 35.38124],
	[139.51261, 35.38159],
	[139.51288, 35.38192],
	[139.51332, 35.38223],
	[139.51375, 35.38241],
	[139.51414, 35.38268],
	[139.51457, 35.38329],
	[139.51472, 35.38367],
	[139.51482, 35.38423],
	[139.51496, 35.38449],
	[139.5152, 35.38471],
	[139.51548, 35.38484],
	[139.51597, 35.385],
	[139.51638, 35.3852],
	[139.51672, 35.38545],
	[139.51703, 35.38578],
	[139.51785, 35.38703],
	[139.51827, 35.38741],
	[139.51931, 35.38822],
	[139.51983, 35.38866],
	[139.52025, 35.38911],
	[139.52046, 35.38944],
	[139.52133, 35.3906],
	[139.52175, 35.39107],
	[139.52406, 35.39284],
	[139.52601, 35.39441],
	[139.52658, 35.39505],
	[139.52687, 35.39553],
	[139.52741, 35.39657],
	[139.52776, 35.39732],
	[139.52792, 35.39799],
	[139.52796, 35.39858],
	[139.52787, 35.39924],
	[139.52732, 35.40202],
	[139.52727, 35.40245],
	[139.52731, 35.40325],
	[139.52754, 35.40397],
	[139.52867, 35.40666],
	[139.52904, 35.40729],
	[139.5303, 35.4089],
	[139.53059, 35.40939],
	[139.53071, 35.40965],
	[139.53114, 35.41096],
	[139.5315, 35.41153],
	[139.53182, 35.41187],
	[139.53229, 35.41228],
	[139.53299, 35.41274],
	[139.53364, 35.4132],
	[139.53431, 35.41352],
	[139.5349, 35.4137],
	[139.53556, 35.41383],
	[139.53615, 35.41385],
	[139.53876, 35.41377],
	[139.53926, 35.4138],
	[139.53984, 35.41391],
	[139.54272, 35.41474],
	[139.5451, 35.41596],
	[139.54684, 35.41716],
	[139.5489, 35.41847],
	[139.54943, 35.41918],
	[139.55041, 35.42],
	[139.55077, 35.42018],
	[139.55254, 35.42071],
	[139.55346, 35.42099],
	[139.55399, 35.42108],
	[139.55595, 35.42131],
	[139.55651, 35.42132],
	[139.55707, 35.42125],
	[139.55945, 35.42066],
	[139.56033, 35.42049],
	[139.56101, 35.42043],
	[139.56193, 35.42045],
	[139.56261, 35.42068],
	[139.563, 35.42093],
	[139.56458, 35.42195],
	[139.56498, 35.4223],
	[139.56696, 35.42454],
	[139.56731, 35.4248],
	[139.56938, 35.42573],
	[139.56985, 35.42617],
	[139.57068, 35.42711],
	[139.57114, 35.42759],
	[139.57182, 35.42811],
	[139.57313, 35.42894],
	[139.57355, 35.42928],
	[139.57409, 35.42993],
	[139.575, 35.43144],
	[139.57558, 35.43244],
	[139.57568, 35.43279],
	[139.57572, 35.43329],
	[139.57572, 35.43376],
	[139.57583, 35.43416],
	[139.57619, 35.43502],
	[139.5763, 35.43572],
	[139.57628, 35.43638],
	[139.57593, 35.43784],
	[139.57572, 35.43824],
	[139.57523, 35.43878],
	[139.57502, 35.43929],
	[139.57503, 35.44075],
	[139.57511, 35.44103],
	[139.57523, 35.44123],
	[139.57574, 35.44177],
	[139.57593, 35.44207],
	[139.57693, 35.44382],
	[139.57745, 35.44468],
	[139.57799, 35.44508],
	[139.57862, 35.44531],
	[139.57948, 35.44542],
	[139.58029, 35.44543],
	[139.58113, 35.44534],
	[139.58246, 35.4451],
	[139.58305, 35.44502],
	[139.58378, 35.44501],
	[139.58435, 35.44509],
	[139.58602, 35.44541],
	[139.58684, 35.4455],
	[139.58838, 35.44554],
	[139.59136, 35.44492],
	[139.59554, 35.44409],
	[139.59622, 35.44382],
	[139.5964, 35.44383],
	[139.59875, 35.44541],
	[139.59951, 35.44587],
	[139.60057, 35.4469],
	[139.60161, 35.44813],
	[139.60235, 35.44889],
	[139.60349, 35.44994],
	[139.60428, 35.45055],
	[139.6047, 35.4508],
	[139.60783, 35.45221],
	[139.61244, 35.45427],
	[139.61497, 35.45549],
	[139.61864, 35.45715],
	[139.6225, 35.45835],
	[139.62296, 35.4588],
	[139.62369, 35.46],
	[139.62377, 35.46065],
	[139.62368, 35.4654],
	[139.62381, 35.46583],
	[139.62567, 35.46808],
	[139.62745, 35.47005],
	[139.6297, 35.47004],
	[139.63024, 35.47029],
	[139.63067, 35.47076],
	[139.6329, 35.47305],
	[139.63555, 35.47598],
	[139.63878, 35.47933],
	[139.64033, 35.4807],
	[139.64152, 35.48166],
	[139.6432, 35.48273],
	[139.6441, 35.48338],
	[139.64538, 35.48409],
	[139.64685, 35.48458],
	[139.65276, 35.48549],
	[139.65625, 35.48658],
	[139.65699, 35.48699],
	[139.65801, 35.48792],
	[139.6607, 35.48951],
	[139.66296, 35.49122],
	[139.66433, 35.49207],
	[139.6664, 35.49319],
	[139.66723, 35.49388],
	[139.66987, 35.49607],
	[139.67376, 35.49941],
	[139.67904, 35.50546],
	[139.68071, 35.50776],
	[139.68151, 35.50868],
	[139.68222, 35.50916],
	[139.68298, 35.50999],
	[139.68365, 35.51074],
	[139.68414, 35.51142],
	[139.68493, 35.51232],
	[139.68566, 35.51337],
	[139.68667, 35.51519],
	[139.68665, 35.51536],
	[139.68756, 35.51671],
	[139.6896, 35.51953],
	[139.69016, 35.52015],
	[139.69053, 35.52043],
	[139.69139, 35.52092],
	[139.69717, 35.52396],
	[139.70184, 35.52648],
	[139.70247, 35.52697],
	[139.70755, 35.53392],
	[139.70815, 35.53584],
	[139.70885, 35.53998],
	[139.70916, 35.54083],
	[139.71, 35.5421],
	[139.71083, 35.54317],
	[139.71297, 35.54584],
	[139.71481, 35.54827],
	[139.71807, 35.55263],
	[139.71917, 35.55424],
	[139.72039, 35.55585],
	[139.72106, 35.55686],
	[139.72302, 35.55953],
	[139.72388, 35.56027],
	[139.7247, 35.56133],
	[139.72769, 35.56531],
	[139.73164, 35.57059],
	[139.73194, 35.57114],
	[139.73359, 35.57333],
	[139.73505, 35.57768],
	[139.73645, 35.58205],
	[139.73642, 35.58302],
	[139.73569, 35.58717],
	[139.73577, 35.58935],
	[139.73597, 35.59117],
	[139.73628, 35.59246],
	[139.73624, 35.59325],
	[139.73628, 35.59428],
	[139.73657, 35.59527],
	[139.73887, 35.60018],
	[139.73998, 35.60257],
	[139.74069, 35.60359],
	[139.74289, 35.60622],
	[139.74305, 35.60653],
	[139.74309, 35.60684],
	[139.74194, 35.61147],
	[139.74111, 35.61472],
	[139.74099, 35.61687],
	[139.74075, 35.61875],
	[139.74046, 35.61957],
	[139.74, 35.62032],
	[139.73812, 35.62325],
	[139.73794, 35.62366],
	[139.73791, 35.62393],
	[139.73812, 35.62491],
	[139.73764, 35.62683],
	[139.73745, 35.62862],
	[139.73742, 35.62947],
	[139.7376, 35.63226],
	[139.73805, 35.63403],
	[139.73923, 35.63738],
	[139.74082, 35.64028],
	[139.74127, 35.64139],
	[139.74212, 35.64286],
	[139.74273, 35.6438],
	[139.74348, 35.64467],
	[139.74421, 35.64527],
	[139.74578, 35.64623],
	[139.74874, 35.64769],
	[139.74995, 35.65505],
	[139.75003, 35.65614],
	[139.75019, 35.65724],
	[139.75054, 35.65926],
	[139.75135, 35.66096],
	[139.75488, 35.66858],
	[139.75613, 35.67093],
	[139.75755, 35.67316],
	[139.7598, 35.67537],
	[139.76094, 35.67858],
	[139.76738, 35.67724],
	[139.76975, 35.67629],
	[139.77428, 35.68351],
	[139.7745, 35.68411],
	[139.77455, 35.68458],
	[139.77291, 35.68494],
	[139.77033, 35.68538],
	[139.76903, 35.68613],
	[139.76832, 35.68627],
	[139.76616, 35.6865],
	[139.76462, 35.68676],
	[139.76439, 35.6868]
]];

const distances = [[
	[0, 3.3],
	[0.048, 3.6],
	[0.721, 2.9],
	[1.461, 2.1],
	[1.77, 2.2],
	[2.2, 3.1],
	[2.671, 3.2],
	[3.434, 3.6],
	[3.787, 2.9],
	[3.901, 3.1],
	[4.162, 4],
	[4.455, 3.4],
	[4.641, 3.4],
	[4.746, 3.6],
	[5.024, 3.7],
	[5.266, 5],
	[5.422, 4.5],
	[5.549, 5],
	[5.686, 4.8],
	[5.865, 4.3],
	[6.186, 4.2],
	[6.461, 3.8],
	[6.604, 4.2],
	[6.784, 4.9],
	[6.974, 4.7],
	[7.196, 5.3],
	[7.366, 6.2],
	[7.61, 9.5],
	[7.726, 13.6],
	[7.773, 14.9],
	[8.153, 6.1],
	[8.243, 6.2],
	[8.359, 5.1],
	[8.652, 3],
	[8.777, 3.4],
	[9.172, 4.4],
	[9.368, 4.1],
	[9.702, 3.2],
	[9.748, 3],
	[10.13, 2.8],
	[10.207, 2.7],
	[10.29, 2.5],
	[10.54, 2.3],
	[11.123, 2.5],
	[11.172, 2.3],
	[11.229, 2.1],
	[11.33, 1.9],
	[11.452, 2],
	[11.557, 2.4],
	[11.745, 2],
	[12.021, 2.1],
	[12.321, 1.7],
	[12.487, 2.2],
	[12.596, 1.9],
	[13.099, 2],
	[13.577, 2.1],
	[13.969, 2.4],
	[14.425, 2.5],
	[14.813, 2.6],
	[15.157, 3],
	[15.312, 2.9],
	[15.34, 2.8],
	[15.382, 2.9],
	[15.415, 3],
	[15.589, 3.3],
	[15.759, 3.1],
	[15.832, 3],
	[16.057, 2.5],
	[16.868, 2.8],
	[17.269, 2.7],
	[17.6, 3.2],
	[17.853, 4.3],
	[17.939, 2.2],
	[18.389, 0.8],
	[18.549, 2],
	[18.615, 2],
	[18.88, 2.1],
	[19.314, 1.5],
	[19.507, 1.2],
	[19.585, 1.4],
	[20.827, 1.1],
	[20.926, 1.3],
	[21.196, 1.2],
	[21.227, 1.2],
	[21.3, 1.1],
	[21.533, 0.9],
	[21.554, 1.3],
	[21.644, 2.1],
	[21.841, 1.7],
	[21.963, 1.2],
	[22.056, 1.1],
	[22.368, 1.6],
	[22.499, 1.9],
	[22.741, 2.4],
	[22.791, 2.4],
	[22.838, 2.5],
	[23.609, 2.2],
	[24.121, 2.2],
	[24.56, 2.3],
	[24.796, 2.2],
	[24.962, 1.5],
	[25.234, 1.8],
	[25.525, 1.8],
	[25.577, 1.8],
	[25.661, 1.9],
	[25.721, 2],
	[25.764, 2.1],
	[25.808, 2],
	[26.105, 1.9],
	[26.437, 2.5],
	[26.654, 6.1],
	[26.762, 6.5],
	[26.92, 6.3],
	[27.018, 6.9],
	[27.125, 7.2],
	[27.257, 6],
	[27.379, 5.2],
	[27.514, 3.7],
	[28.035, 3.7],
	[28.439, 4.3],
	[28.84, 2.7],
	[28.955, 2.5],
	[29.181, 1.1],
	[29.277, 1.1],
	[29.585, 2.2],
	[29.653, 2.3],
	[30.191, 1.7],
	[30.268, 1.9],
	[30.33, 2],
	[30.429, 3],
	[30.472, 3],
	[30.513, 2.7],
	[30.782, 2.4],
	[30.945, 2.5],
	[31.103, 2.4],
	[31.259, 2.5],
	[31.516, 2.3],
	[32.005, 2.9],
	[32.327, 4.2],
	[32.465, 4.9],
	[32.622, 5.9],
	[32.902, 10.2],
	[33.048, 8.5],
	[33.116, 8],
	[33.429, 7.1],
	[33.519, 7],
	[33.909, 8.5],
	[34.075, 8.3],
	[34.177, 9.2],
	[34.313, 11.1],
	[34.569, 14.2],
	[34.688, 15.6],
	[34.883, 16.4],
	[34.983, 17.8],
	[35.088, 20.5],
	[35.148, 22.1],
	[35.217, 23.7],
	[35.493, 30.3],
	[35.549, 32],
	[35.627, 33.4],
	[35.674, 34.1],
	[35.843, 38.5],
	[35.882, 39.7],
	[35.964, 41.8],
	[36.008, 43.2],
	[36.193, 49.4],
	[36.33, 52.6],
	[36.475, 54.1],
	[36.56, 56.8],
	[36.61, 57.7],
	[36.736, 55.6],
	[36.893, 50.7],
	[36.984, 47.6],
	[37.062, 45],
	[37.148, 42.4],
	[37.224, 39.7],
	[37.344, 37.6],
	[37.534, 34.1],
	[37.588, 33.3],
	[37.77, 31.3],
	[37.836, 30.4],
	[37.959, 28],
	[38.16, 25.9],
	[38.251, 25.2],
	[38.445, 23.1],
	[38.506, 22.3],
	[38.618, 21.6],
	[38.691, 21.3],
	[38.966, 20.2],
	[39.046, 19.7],
	[39.261, 19.1],
	[39.378, 19.2],
	[39.565, 19.5],
	[39.705, 19.5],
	[39.801, 18.8],
	[39.935, 18.6],
	[40.053, 18.3],
	[40.269, 18.8],
	[40.504, 21],
	[40.815, 20.4],
	[40.887, 22.1],
	[41.098, 23],
	[41.197, 22.3],
	[41.388, 22.2],
	[41.421, 22.9],
	[41.51, 24.2],
	[41.59, 25.8],
	[41.665, 27.2],
	[41.835, 32],
	[41.912, 34.5],
	[42.034, 37],
	[42.188, 40.8],
	[42.356, 43.3],
	[42.549, 37.2],
	[42.667, 34.1],
	[42.734, 33.5],
	[43.099, 29.7],
	[43.178, 27.4],
	[43.29, 24.4],
	[43.403, 22.5],
	[43.547, 24.2],
	[43.621, 25.6],
	[43.694, 26.9],
	[44.169, 45.5],
	[44.228, 47.8],
	[44.352, 52.2],
	[44.4, 53.9],
	[44.457, 56.4],
	[44.518, 58.8],
	[44.652, 61.1],
	[44.695, 61.5],
	[44.744, 62.6],
	[44.814, 61.8],
	[44.946, 59.1],
	[44.992, 58.9],
	[45.029, 59.4],
	[45.101, 61.5],
	[45.145, 62.7],
	[45.2, 64.5],
	[45.305, 67.5],
	[45.362, 68.5],
	[45.413, 68.3],
	[45.465, 69.1],
	[45.519, 68.1],
	[45.563, 66.7],
	[45.625, 64.2],
	[45.675, 62.3],
	[45.757, 59.1],
	[45.869, 54.8],
	[46.021, 52.2],
	[46.16, 51.1],
	[46.296, 49.5],
	[46.365, 49.3],
	[46.426, 48.7],
	[46.479, 48.4],
	[46.763, 48],
	[47.08, 50.3],
	[47.288, 52.1],
	[47.444, 53.5],
	[47.655, 53.2],
	[47.902, 54.4],
	[48.067, 56.2],
	[48.304, 51.5],
	[48.404, 49.4],
	[48.475, 53],
	[48.775, 55.2],
	[48.966, 53.8],
	[49.096, 52.5],
	[49.174, 52],
	[49.252, 50.7],
	[49.343, 47.7],
	[49.459, 45.6],
	[49.567, 44.6],
	[49.627, 43],
	[49.666, 41.3],
	[49.769, 34.2],
	[49.978, 22.3],
	[50.125, 11.9],
	[50.237, 9],
	[50.276, 9.2],
	[50.396, 12.2],
	[50.663, 21.3],
	[50.704, 19.7],
	[50.789, 14.7],
	[50.923, 12.4],
	[50.999, 12],
	[51.136, 11.5],
	[51.306, 10.4],
	[51.335, 10.5],
	[51.482, 10.7],
	[51.627, 10],
	[51.702, 9.9],
	[52.128, 8.1],
	[52.302, 6.9],
	[52.644, 7.9],
	[52.691, 8.3],
	[52.739, 8.8],
	[52.778, 9.3],
	[53.022, 8.5],
	[53.56, 10.4],
	[54.062, 9.3],
	[54.132, 9.7],
	[54.226, 10.8],
	[54.556, 8.6],
	[54.835, 8.3],
	[55.048, 8.9],
	[55.212, 8.9],
	[55.337, 7.4],
	[55.513, 6.1],
	[55.845, 5.7],
	[55.923, 5.7],
	[55.987, 5.8],
	[56.094, 5.8],
	[56.191, 6],
	[56.26, 6.3],
	[56.506, 6.7],
	[56.743, 7.7],
	[57.186, 6.4],
	[57.58, 6.1],
	[57.657, 6.1],
	[57.737, 6.4],
	[57.805, 6.4],
	[57.915, 5.9],
	[58.249, 6.4],
	[58.559, 8],
	[58.742, 8.2],
	[59.133, 6.8],
	[59.36, 10.4],
	[59.473, 11.8],
	[59.697, 9],
	[59.936, 7.7],
	[60.188, 8.1],
	[60.621, 7.2],
	[60.724, 6.3],
	[60.83, 5.4],
	[60.953, 4.2],
	[61.049, 3.9],
	[61.416, 4],
	[61.483, 4.1],
	[61.561, 4.4],
	[61.628, 5.1],
	[61.823, 8.5],
	[62.205, 2],
	[62.574, 10.9],
	[62.637, 11.7],
	[62.766, 10.3],
	[62.936, 7.9],
	[63.055, 7.9],
	[63.164, 8],
	[63.407, 8.3],
	[63.666, 9.2],
	[64.056, 8.9],
	[64.508, 8.8],
	[64.963, 8.7],
	[65.093, 8.6],
	[65.343, 6.5],
	[65.427, 6.7],
	[65.633, 3.2],
	[65.698, 3.5],
	[65.8, 3.8],
	[66.07, 4.2],
	[66.215, 4.6],
	[66.352, 4.5],
	[66.395, 4.6],
	[66.647, 5.6],
	[66.677, 6.9],
	[66.747, 6.7],
	[66.916, 6.8],
	[66.954, 6],
	[66.989, 5.3],
	[67.019, 4.9],
	[67.204, 9.2],
	[67.234, 9.5],
	[67.443, 10],
	[67.588, 11],
	[67.636, 11.2],
	[67.681, 11.4],
	[67.726, 11.7],
	[67.765, 11.8],
	[67.868, 11.7],
	[67.981, 15.8],
	[68.164, 20.4],
	[68.278, 21.3],
	[68.339, 21.2],
	[68.604, 19.9],
	[68.838, 19],
	[69.557, 15.5],
	[69.757, 10.4],
	[69.789, 13],
	[69.861, 13.1],
	[70.686, 13.6],
	[70.851, 15.6],
	[71.068, 15.6],
	[71.229, 16.6],
	[71.469, 18.6],
	[71.542, 18.7],
	[71.63, 18.8],
	[71.904, 21.7],
	[72.212, 19],
	[72.296, 19.1],
	[72.427, 16.7],
	[72.469, 16.3],
	[72.535, 16.4],
	[72.606, 16.6],
	[72.807, 20.9],
	[72.93, 21.2],
	[73.039, 21.5],
	[73.118, 21.7],
	[73.244, 21.5],
	[73.288, 21.3],
	[73.41, 21.2],
	[73.446, 21],
	[73.557, 20.8],
	[73.816, 20],
	[74.116, 22.9],
	[74.173, 23.2],
	[74.314, 23.6],
	[74.418, 23.1],
	[74.535, 23.2],
	[74.618, 23.3],
	[74.831, 16.3],
	[74.896, 13.7],
	[74.969, 10.7],
	[75.091, 8.2],
	[75.135, 8],
	[75.193, 8.2],
	[75.247, 8.5],
	[75.586, 19.6],
	[75.788, 21.1],
	[75.849, 18.8],
	[75.998, 14.2],
	[76.097, 11.6],
	[76.276, 9],
	[76.333, 8.8],
	[76.474, 10.3],
	[76.577, 13],
	[76.613, 13.4],
	[76.922, 12.2],
	[76.969, 12.5],
	[77.026, 11.9],
	[77.091, 11.4],
	[77.142, 11.3],
	[77.321, 10.6],
	[77.453, 13],
	[77.615, 18.1],
	[78.084, 9],
	[78.245, 6],
	[78.345, 6.5],
	[78.401, 6.5],
	[78.457, 6.8],
	[78.577, 7.3],
	[78.628, 7.8],
	[78.693, 8.6],
	[78.887, 10],
	[78.958, 10.2],
	[79.083, 9.2],
	[79.155, 9.1],
	[79.469, 8.7],
	[79.628, 9.4],
	[79.787, 9],
	[79.94, 8.7],
	[80.105, 8.2],
	[80.244, 7.5],
	[80.443, 7],
	[80.861, 6.1],
	[80.912, 7.8],
	[80.956, 8.4],
	[81.04, 2.5],
	[81.253, 2.4],
	[81.351, 5.6],
	[81.428, 7],
	[81.575, 5.5],
	[81.762, 6],
	[82, 6.7],
	[82.241, 6.1],
	[82.306, 6.3],
	[82.45, 6.1],
	[82.737, 5],
	[83.029, 5.8],
	[83.105, 6.4],
	[83.31, 6.5],
	[83.357, 6.6],
	[83.672, 7.3],
	[83.771, 7.8],
	[83.828, 8.4],
	[83.918, 9.7],
	[84.121, 10.3],
	[84.183, 10.5],
	[84.268, 10.4],
	[84.354, 10.4],
	[84.456, 10.9],
	[84.861, 13],
	[85.057, 13.5],
	[85.138, 12.8],
	[85.231, 13.1],
	[85.28, 13.8],
	[85.331, 14.7],
	[85.416, 16.2],
	[85.755, 21.6],
	[85.779, 22.3],
	[85.823, 23.4],
	[85.991, 27.3],
	[86.084, 30.3],
	[86.192, 32.5],
	[86.228, 32.8],
	[86.396, 33.9],
	[86.446, 34.1],
	[86.497, 34.2],
	[86.546, 34.4],
	[86.684, 35.1],
	[86.7, 35.4],
	[86.72, 35.7],
	[86.733, 35.8],
	[87.678, 51.8],
	[88.002, 58.2],
	[88.063, 59.3],
	[88.196, 62.3],
	[88.342, 66.3],
	[88.408, 69],
	[88.536, 75.7],
	[88.603, 77.5],
	[88.706, 81.1],
	[88.801, 85],
	[88.932, 89.4],
	[89.007, 88.7],
	[89.076, 85],
	[89.136, 86.5],
	[89.184, 87.8],
	[89.246, 89.5],
	[89.328, 89.5],
	[89.443, 93.3],
	[89.543, 94.6],
	[89.591, 94.7],
	[89.649, 94.6],
	[89.698, 94.8],
	[89.74, 95.3],
	[89.798, 96.2],
	[89.832, 97.2],
	[89.89, 99.4],
	[89.957, 102.2],
	[89.997, 103.7],
	[90.03, 105.2],
	[90.041, 105.4],
	[90.08, 104],
	[90.1, 106.1],
	[90.15, 107.7],
	[90.2, 109.9],
	[90.24, 112.6],
	[90.276, 114.7],
	[90.304, 109.2],
	[90.364, 117.5],
	[90.382, 117.2],
	[90.405, 115.8],
	[90.469, 119.1],
	[90.489, 119.4],
	[90.523, 118.1],
	[90.56, 120.4],
	[90.577, 121.4],
	[90.603, 123.4],
	[90.622, 124.2],
	[90.683, 125.4],
	[90.706, 126.7],
	[90.817, 133.3],
	[90.838, 134.4],
	[90.857, 135.4],
	[90.88, 138.5],
	[90.914, 140.7],
	[90.944, 143.6],
	[90.982, 146],
	[91.006, 148.3],
	[91.052, 151.8],
	[91.068, 152.1],
	[91.132, 154.6],
	[91.193, 161.3],
	[91.236, 165.6],
	[91.301, 169.5],
	[91.328, 171.6],
	[91.368, 173.6],
	[91.395, 176.4],
	[91.417, 178.1],
	[91.46, 181],
	[91.519, 183.9],
	[91.542, 184.8],
	[91.57, 186.8],
	[91.597, 187.8],
	[91.626, 188.8],
	[91.653, 190],
	[91.737, 195.4],
	[91.795, 198.2],
	[91.832, 200.4],
	[91.876, 203.8],
	[91.895, 205.7],
	[91.946, 209.2],
	[91.966, 210.7],
	[91.997, 213.8],
	[92.01, 214.3],
	[92.024, 215.4],
	[92.056, 218.9],
	[92.072, 219.5],
	[92.087, 220.1],
	[92.112, 222.2],
	[92.131, 225.1],
	[92.207, 230.5],
	[92.231, 231.7],
	[92.251, 232],
	[92.269, 232.3],
	[92.31, 232.8],
	[92.338, 233.4],
	[92.36, 234.5],
	[92.382, 235.6],
	[92.408, 237.3],
	[92.429, 238.8],
	[92.536, 245.6],
	[92.551, 247.2],
	[92.598, 253.1],
	[92.619, 253.7],
	[92.643, 255.2],
	[92.665, 255.2],
	[92.683, 255.8],
	[92.707, 257.6],
	[92.749, 259.6],
	[92.766, 259.8],
	[92.804, 260.9],
	[92.819, 261.5],
	[92.854, 263.8],
	[92.874, 264.2],
	[92.918, 268.4],
	[92.962, 271.1],
	[92.99, 273.1],
	[93.035, 277.9],
	[93.053, 278.4],
	[93.11, 282.7],
	[93.125, 284.5],
	[93.144, 285.6],
	[93.162, 287.3],
	[93.186, 288.6],
	[93.212, 290.6],
	[93.242, 293],
	[93.284, 297.7],
	[93.334, 301],
	[93.374, 304.6],
	[93.397, 306],
	[93.422, 308.5],
	[93.468, 310.1],
	[93.515, 313],
	[93.533, 314.6],
	[93.569, 317.5],
	[93.603, 320.3],
	[93.643, 323.1],
	[93.666, 325.8],
	[93.694, 327.9],
	[93.705, 328.4],
	[93.715, 329.1],
	[93.729, 330],
	[93.758, 331.7],
	[93.801, 334.6],
	[93.829, 336.7],
	[93.863, 338.8],
	[93.896, 341.5],
	[93.946, 343.8],
	[93.965, 344.3],
	[93.986, 345],
	[94.007, 346.5],
	[94.033, 348.5],
	[94.053, 349.6],
	[94.1, 352.2],
	[94.111, 353.1],
	[94.143, 355.8],
	[94.21, 361.1],
	[94.222, 362],
	[94.285, 366],
	[94.335, 369.1],
	[94.363, 370.4],
	[94.381, 370.4],
	[94.42, 373.6],
	[94.438, 374.4],
	[94.453, 372.4],
	[94.466, 375.7],
	[94.479, 377.1],
	[94.495, 378.4],
	[94.559, 382.7],
	[94.63, 385.5],
	[94.656, 386.1],
	[94.689, 388.7],
	[94.711, 390.6],
	[94.755, 392.5],
	[94.775, 394.4],
	[94.79, 391.3],
	[94.802, 395.6],
	[94.82, 397.7],
	[94.873, 401.4],
	[94.895, 401.9],
	[94.911, 401.5],
	[94.936, 402.6],
	[94.975, 404.5],
	[94.995, 404.2],
	[95.041, 404.9],
	[95.059, 404],
	[95.091, 403.4],
	[95.133, 404.7],
	[95.151, 404.5],
	[95.186, 403.5],
	[95.229, 405.1],
	[95.244, 405.2],
	[95.253, 405.4],
	[95.272, 405.7],
	[95.293, 406.8],
	[95.305, 407.6],
	[95.317, 408.1],
	[95.332, 409.2],
	[95.362, 411.9],
	[95.382, 414.1],
	[95.432, 412.8],
	[95.456, 413.6],
	[95.474, 413.6],
	[95.492, 413.8],
	[95.511, 414.5],
	[95.535, 414.9],
	[95.55, 415.1],
	[95.589, 415.3],
	[95.63, 416],
	[95.668, 416.4],
	[95.706, 417],
	[95.78, 418.2],
	[95.804, 419.3],
	[95.838, 421.4],
	[95.888, 424.3],
	[95.904, 424.9],
	[95.957, 429.4],
	[96.014, 434.3],
	[96.046, 436.5],
	[96.078, 438.2],
	[96.109, 442.1],
	[96.127, 443.2],
	[96.146, 444.7],
	[96.205, 450],
	[96.261, 453.9],
	[96.299, 456.5],
	[96.341, 458.7],
	[96.374, 461.5],
	[96.439, 467.6],
	[96.457, 469.7],
	[96.483, 473.4],
	[96.531, 476.5],
	[96.549, 477.3],
	[96.583, 483.3],
	[96.596, 484.8],
	[96.609, 484.4],
	[96.622, 485.6],
	[96.638, 487.2],
	[96.715, 490.7],
	[96.737, 492.9],
	[96.749, 494.2],
	[96.768, 495.2],
	[96.79, 496.9],
	[96.808, 498],
	[96.844, 501.3],
	[96.86, 502.6],
	[96.88, 504.4],
	[96.911, 506.9],
	[96.93, 508],
	[96.941, 508.7],
	[96.955, 509.5],
	[97.001, 513.1],
	[97.022, 514.5],
	[97.057, 517],
	[97.114, 520.8],
	[97.125, 521.4],
	[97.135, 521.9],
	[97.146, 522.2],
	[97.19, 523],
	[97.2, 523.2],
	[97.211, 524.5],
	[97.246, 527.2],
	[97.31, 533.5],
	[97.359, 536.8],
	[97.375, 538.3],
	[97.431, 543.2],
	[97.464, 545],
	[97.492, 548.8],
	[97.548, 553.3],
	[97.572, 555.2],
	[97.596, 557.7],
	[97.617, 562],
	[97.63, 557.2],
	[97.643, 561],
	[97.679, 562.4],
	[97.691, 563.7],
	[97.701, 565],
	[97.713, 566.1],
	[97.743, 568.4],
	[97.76, 570.1],
	[97.808, 573.6],
	[97.857, 577.3],
	[97.899, 581],
	[97.945, 584.3],
	[97.98, 587.5],
	[98.037, 592.6],
	[98.049, 592.9],
	[98.059, 594.1],
	[98.069, 595.2],
	[98.081, 595.7],
	[98.124, 597.3],
	[98.138, 598.1],
	[98.197, 601.6],
	[98.236, 604.1],
	[98.255, 605.5],
	[98.269, 606.4],
	[98.281, 607.5],
	[98.375, 613.9],
	[98.391, 615.3],
	[98.411, 616.4],
	[98.422, 617.3],
	[98.619, 621.1],
	[98.74, 627.9],
	[98.766, 629.4],
	[98.81, 632],
	[98.859, 634.7],
	[98.902, 636.2],
	[98.995, 641],
	[99.061, 643.1],
	[99.165, 649.7],
	[99.198, 650.5],
	[99.23, 653.6],
	[99.282, 657],
	[99.296, 657.2],
	[99.307, 657.1],
	[99.321, 658.2],
	[99.34, 659.8],
	[99.355, 662.1],
	[99.374, 662.4],
	[99.386, 663.5],
	[99.405, 664.5],
	[99.466, 669.2],
	[99.487, 671.1],
	[99.513, 672.7],
	[99.527, 673.2],
	[99.543, 673.9],
	[99.586, 676.8],
	[99.603, 678],
	[99.617, 679.2],
	[99.63, 680.1],
	[99.671, 682.5],
	[99.682, 683],
	[99.694, 683.6],
	[99.706, 684.3],
	[99.774, 690],
	[99.798, 691.8],
	[99.857, 697.7],
	[99.876, 699.1],
	[99.893, 698.6],
	[99.958, 705],
	[99.98, 707.5],
	[100.042, 710.5],
	[100.07, 711.3],
	[100.112, 714.4],
	[100.22, 722.3],
	[100.36, 731.8],
	[100.396, 733.7],
	[100.41, 734.5],
	[100.421, 735.3],
	[100.432, 736.4],
	[100.445, 737.2],
	[100.467, 738.4],
	[100.511, 740.9],
	[100.554, 744],
	[100.567, 744.8],
	[100.578, 745.5],
	[100.597, 747],
	[100.609, 747.5],
	[100.641, 749.9],
	[100.682, 752.5],
	[100.733, 755.1],
	[100.772, 757.2],
	[100.808, 759.6],
	[100.844, 762.3],
	[100.861, 763.8],
	[100.88, 765.4],
	[100.942, 770.1],
	[100.998, 773],
	[101.012, 773.5],
	[101.041, 774.7],
	[101.081, 776.8],
	[101.192, 784.5],
	[101.211, 785.7],
	[101.24, 788.5],
	[101.314, 792.9],
	[101.329, 793.9],
	[101.344, 794.7],
	[101.382, 797.3],
	[101.398, 798.7],
	[101.413, 800.7],
	[101.465, 803.2],
	[101.481, 804.1],
	[101.493, 804.5],
	[101.503, 804.6],
	[101.52, 806.1],
	[101.679, 814],
	[101.72, 816.2],
	[101.76, 818.5],
	[101.78, 820.4],
	[101.799, 821.1],
	[101.815, 821.6],
	[101.859, 825.4],
	[101.877, 826.9],
	[101.898, 828.5],
	[101.921, 830.5],
	[101.944, 832.7],
	[101.962, 833.8],
	[101.981, 835.4],
	[102.035, 840],
	[102.071, 842.2],
	[102.168, 849],
	[102.194, 850.9],
	[102.305, 855.1],
	[102.416, 847.9],
	[102.679, 857.1],
	[102.827, 870.2],
	[102.933, 873.3],
	[102.959, 872.7],
	[103.013, 871.5],
	[103.047, 870.9],
	[103.09, 870.7],
	[103.171, 869.9],
	[103.196, 869.3],
	[103.229, 867.4],
	[103.245, 867.1],
	[103.267, 866.4],
	[103.304, 865.8],
	[103.329, 865.3],
	[103.482, 864.4],
	[103.517, 864.1],
	[103.553, 864.4],
	[103.633, 864.8],
	[103.653, 864.6],
	[103.72, 863.5],
	[103.74, 863],
	[103.78, 861.4],
	[103.808, 860],
	[103.865, 856.9],
	[103.885, 855],
	[103.905, 853.5],
	[103.981, 847.1],
	[104.012, 844.4],
	[104.049, 841.1],
	[104.089, 839.1],
	[104.122, 836.9],
	[104.159, 834.9],
	[104.192, 833.1],
	[104.383, 822.6],
	[104.474, 815.8],
	[104.514, 812.7],
	[104.547, 809.5],
	[104.676, 799.9],
	[104.757, 796.6],
	[104.792, 792.9],
	[104.814, 790.6],
	[104.832, 789.2],
	[104.852, 787.4],
	[104.876, 784.9],
	[104.899, 783.1],
	[104.927, 781.3],
	[105.005, 777.4],
	[105.061, 774.7],
	[105.074, 773.9],
	[105.087, 773],
	[105.106, 772.1],
	[105.137, 770],
	[105.187, 766.8],
	[105.209, 764.8],
	[105.257, 761],
	[105.318, 756.7],
	[105.342, 755],
	[105.352, 754.2],
	[105.362, 752.9],
	[105.398, 750.3],
	[105.441, 747.2],
	[105.487, 744.7],
	[105.499, 743.9],
	[105.516, 742.8],
	[105.552, 740.2],
	[105.575, 737.3],
	[105.612, 734.9],
	[105.71, 728.4],
	[105.726, 728.1],
	[105.748, 728.1],
	[105.814, 727.8],
	[105.851, 727.5],
	[105.953, 727.7],
	[106.051, 727.9],
	[106.171, 733.1],
	[106.208, 733.5],
	[106.228, 732.8],
	[106.292, 731.3],
	[106.328, 731.1],
	[106.385, 730.5],
	[106.416, 731.1],
	[106.52, 730.5],
	[106.555, 731.6],
	[106.628, 733.9],
	[106.691, 735.8],
	[106.715, 736.7],
	[106.753, 737.1],
	[106.777, 737.1],
	[106.859, 737.4],
	[106.888, 738.5],
	[106.913, 739.6],
	[107.056, 737.3],
	[107.082, 735.4],
	[107.11, 733.5],
	[107.211, 728.7],
	[107.455, 727.8],
	[107.5, 726.8],
	[107.5, 726.8]
], [
	[0, 726.9],
	[0.043, 727.8],
	[0.289, 728.7],
	[0.393, 733.8],
	[0.419, 735.4],
	[0.443, 737.1],
	[0.586, 739.6],
	[0.632, 737.7],
	[0.691, 737],
	[0.744, 737.1],
	[0.794, 736.3],
	[0.867, 734],
	[0.944, 731.6],
	[0.972, 730.1],
	[0.994, 730.3],
	[1.085, 731.1],
	[1.114, 730.5],
	[1.183, 730.9],
	[1.221, 731.4],
	[1.284, 733.3],
	[1.311, 733.6],
	[1.34, 732.4],
	[1.449, 727.9],
	[1.544, 727.7],
	[1.655, 727.6],
	[1.689, 727.8],
	[1.751, 728],
	[1.785, 728.3],
	[1.88, 733.5],
	[1.914, 736.7],
	[1.981, 742.4],
	[2.001, 743.7],
	[2.014, 744.7],
	[2.065, 747.4],
	[2.105, 750.5],
	[2.139, 752.9],
	[2.15, 754.2],
	[2.161, 755.3],
	[2.236, 760.1],
	[2.29, 764.4],
	[2.312, 766.2],
	[2.416, 773],
	[2.429, 774],
	[2.443, 774.8],
	[2.5, 777.7],
	[2.589, 781.2],
	[2.617, 784.5],
	[2.644, 786.9],
	[2.665, 788.9],
	[2.688, 791],
	[2.717, 793.4],
	[2.825, 799.9],
	[2.989, 812.7],
	[3.112, 822.9],
	[3.314, 833.1],
	[3.355, 835.7],
	[3.389, 837.6],
	[3.419, 839.2],
	[3.453, 841.5],
	[3.484, 843.8],
	[3.506, 845.8],
	[3.593, 853.3],
	[3.617, 855.3],
	[3.641, 857.2],
	[3.706, 860.9],
	[3.776, 863.3],
	[3.85, 864.4],
	[3.97, 864.2],
	[4.009, 864.1],
	[4.188, 865.7],
	[4.245, 866.3],
	[4.267, 867],
	[4.303, 869.1],
	[4.326, 869.9],
	[4.41, 870.7],
	[4.452, 870.9],
	[4.487, 871.5],
	[4.548, 873.1],
	[4.576, 873.3],
	[4.655, 870.9],
	[4.77, 862.2],
	[4.84, 855.7],
	[5.072, 847.5],
	[5.302, 851.6],
	[5.335, 849.4],
	[5.425, 843],
	[5.455, 840.6],
	[5.476, 840.5],
	[5.536, 834.4],
	[5.561, 832.7],
	[5.584, 830.3],
	[5.602, 829],
	[5.623, 827.2],
	[5.64, 826.1],
	[5.691, 821.6],
	[5.712, 821],
	[5.731, 820.6],
	[5.751, 818.3],
	[5.815, 814.4],
	[5.987, 806.1],
	[6.001, 804.9],
	[6.012, 804.5],
	[6.027, 803.6],
	[6.038, 803.2],
	[6.095, 801.3],
	[6.121, 799.1],
	[6.16, 794.7],
	[6.175, 793.6],
	[6.189, 793.1],
	[6.278, 786.6],
	[6.297, 785.5],
	[6.308, 784.5],
	[6.411, 777.1],
	[6.468, 774.7],
	[6.494, 773.7],
	[6.523, 772.3],
	[6.579, 768.9],
	[6.628, 764.6],
	[6.644, 763.6],
	[6.663, 762.1],
	[6.735, 757.2],
	[6.843, 751.5],
	[6.886, 748.5],
	[6.902, 747.6],
	[6.921, 746.2],
	[6.937, 745.1],
	[6.957, 743.8],
	[6.993, 741.2],
	[7.042, 738.4],
	[7.066, 737],
	[7.077, 735.9],
	[7.087, 735.3],
	[7.1, 734.4],
	[7.113, 733.5],
	[7.151, 731.7],
	[7.2, 730.2],
	[7.287, 722.3],
	[7.372, 717],
	[7.438, 712.1],
	[7.47, 710.4],
	[7.532, 706.8],
	[7.618, 698.6],
	[7.647, 698.9],
	[7.717, 691.2],
	[7.735, 690],
	[7.752, 688.5],
	[7.797, 685.4],
	[7.811, 683.9],
	[7.823, 683.1],
	[7.837, 682.5],
	[7.875, 679.8],
	[7.884, 679.8],
	[7.894, 678.9],
	[7.911, 677.6],
	[7.971, 673.5],
	[7.983, 673.2],
	[8.003, 671.9],
	[8.031, 669.9],
	[8.083, 665.4],
	[8.114, 664.1],
	[8.129, 662.8],
	[8.159, 660.3],
	[8.175, 658.1],
	[8.189, 658.2],
	[8.209, 658.1],
	[8.225, 658.9],
	[8.303, 652.5],
	[8.332, 649.5],
	[8.387, 647.2],
	[8.447, 643.5],
	[8.513, 641],
	[8.566, 638],
	[8.626, 635.4],
	[8.65, 634.7],
	[8.692, 633.4],
	[8.706, 631.5],
	[8.758, 628.5],
	[8.893, 620.8],
	[9.099, 616.4],
	[9.12, 615.3],
	[9.138, 614.2],
	[9.235, 607.1],
	[9.252, 605.8],
	[9.275, 604.1],
	[9.324, 601.5],
	[9.38, 597.8],
	[9.431, 595.3],
	[9.45, 594.2],
	[9.469, 592.9],
	[9.495, 591.2],
	[9.534, 587.5],
	[9.569, 584.3],
	[9.626, 579.4],
	[9.684, 575.5],
	[9.732, 571.7],
	[9.762, 569.7],
	[9.788, 567.2],
	[9.811, 565.4],
	[9.823, 564.1],
	[9.838, 562.2],
	[9.874, 560.3],
	[9.883, 559.2],
	[9.893, 559.4],
	[9.905, 559.9],
	[9.926, 557.1],
	[9.957, 555.3],
	[10.025, 548],
	[10.053, 545.4],
	[10.086, 542.9],
	[10.139, 538.7],
	[10.155, 537.2],
	[10.207, 531.8],
	[10.269, 527.2],
	[10.307, 523.8],
	[10.318, 523.2],
	[10.345, 522.9],
	[10.37, 522],
	[10.38, 521.6],
	[10.393, 521],
	[10.447, 517.3],
	[10.461, 517.1],
	[10.49, 515.3],
	[10.505, 513.9],
	[10.562, 509.3],
	[10.574, 508.7],
	[10.59, 507.8],
	[10.65, 503.3],
	[10.668, 501.1],
	[10.702, 498],
	[10.726, 496.7],
	[10.764, 494.4],
	[10.781, 491.1],
	[10.802, 490.7],
	[10.881, 486.3],
	[10.895, 485],
	[10.912, 484.8],
	[10.924, 483.8],
	[10.936, 481.9],
	[10.963, 477.3],
	[10.981, 476.5],
	[11.031, 472.6],
	[11.073, 467.6],
	[11.152, 460.4],
	[11.175, 458.5],
	[11.256, 454],
	[11.371, 444.6],
	[11.403, 442.1],
	[11.437, 438.2],
	[11.47, 436.5],
	[11.61, 424.9],
	[11.626, 424.3],
	[11.642, 423.7],
	[11.678, 421.4],
	[11.711, 419.3],
	[11.735, 418.2],
	[11.798, 417],
	[11.866, 416.2],
	[11.899, 415.9],
	[11.935, 415.4],
	[11.971, 415],
	[12.006, 414.5],
	[12.042, 413.4],
	[12.088, 412.8],
	[12.132, 413.3],
	[12.165, 410.4],
	[12.19, 408.6],
	[12.207, 407.5],
	[12.221, 406.6],
	[12.258, 405.5],
	[12.271, 405.2],
	[12.286, 405.1],
	[12.361, 403.8],
	[12.386, 404.3],
	[12.461, 403.9],
	[12.517, 403.8],
	[12.53, 403.9],
	[12.607, 402.2],
	[12.625, 401.8],
	[12.702, 397.5],
	[12.72, 390.9],
	[12.743, 394.2],
	[12.789, 391],
	[12.81, 389.6],
	[12.859, 386.2],
	[12.873, 385.5],
	[12.888, 384.7],
	[12.953, 382.9],
	[13.019, 378.4],
	[13.037, 376.1],
	[13.05, 374.5],
	[13.064, 373.8],
	[13.091, 373.6],
	[13.136, 371.1],
	[13.152, 370.2],
	[13.176, 368.2],
	[13.223, 365.3],
	[13.283, 362.6],
	[13.299, 361.6],
	[13.373, 355.2],
	[13.405, 352.5],
	[13.461, 349.2],
	[13.491, 347],
	[13.514, 345.8],
	[13.535, 344.5],
	[13.562, 343.8],
	[13.615, 341.2],
	[13.677, 336.7],
	[13.707, 334.6],
	[13.731, 332.6],
	[13.775, 329.7],
	[13.786, 329.3],
	[13.797, 329.2],
	[13.808, 328.7],
	[13.817, 328.4],
	[13.838, 326.9],
	[13.867, 324.1],
	[13.91, 320.3],
	[13.981, 314.6],
	[14.047, 309.9],
	[14.091, 306.6],
	[14.137, 304.9],
	[14.184, 301],
	[14.228, 297.6],
	[14.269, 293.6],
	[14.32, 289.5],
	[14.337, 287.7],
	[14.357, 287.3],
	[14.389, 284.6],
	[14.406, 281.7],
	[14.459, 278.8],
	[14.473, 277.8],
	[14.487, 276.5],
	[14.527, 273.1],
	[14.553, 270.5],
	[14.577, 269.1],
	[14.636, 264.8],
	[14.657, 264.1],
	[14.696, 261.5],
	[14.71, 260.6],
	[14.746, 259.3],
	[14.765, 259.6],
	[14.814, 255.6],
	[14.836, 256.1],
	[14.852, 255.2],
	[14.868, 254.9],
	[14.895, 252.7],
	[14.972, 246.3],
	[15.072, 238.4],
	[15.098, 237.8],
	[15.114, 236.6],
	[15.138, 235.6],
	[15.161, 234.3],
	[15.178, 233.4],
	[15.205, 232.8],
	[15.218, 232.7],
	[15.248, 232.3],
	[15.267, 231.7],
	[15.284, 231.4],
	[15.324, 228.3],
	[15.381, 224.2],
	[15.4, 222.2],
	[15.433, 220],
	[15.453, 219.2],
	[15.492, 215.4],
	[15.506, 214.2],
	[15.519, 213],
	[15.544, 210.4],
	[15.567, 209.4],
	[15.624, 204.4],
	[15.638, 204.5],
	[15.691, 199.5],
	[15.768, 196.5],
	[15.852, 190.7],
	[15.886, 187.9],
	[15.912, 188.4],
	[15.93, 187.2],
	[15.971, 185.1],
	[15.983, 184.4],
	[15.997, 184.1],
	[16.06, 181],
	[16.108, 177.2],
	[16.128, 175.7],
	[16.151, 173.6],
	[16.19, 170],
	[16.22, 168.4],
	[16.283, 165.3],
	[16.329, 161.1],
	[16.361, 156.6],
	[16.452, 151.9],
	[16.473, 150.9],
	[16.524, 147.4],
	[16.571, 143.6],
	[16.595, 140.6],
	[16.621, 139.1],
	[16.657, 135.7],
	[16.683, 134.1],
	[16.713, 132.5],
	[16.809, 126.7],
	[16.825, 126],
	[16.843, 125.4],
	[16.895, 124.2],
	[16.911, 123.6],
	[16.943, 121.5],
	[16.958, 120.5],
	[16.988, 121],
	[17.017, 119.6],
	[17.038, 119.3],
	[17.055, 119],
	[17.114, 115.8],
	[17.135, 117.2],
	[17.15, 118.3],
	[17.209, 120],
	[17.23, 114.4],
	[17.274, 113],
	[17.295, 111.3],
	[17.359, 107.7],
	[17.402, 106.8],
	[17.423, 104],
	[17.464, 104.8],
	[17.483, 105.9],
	[17.518, 104],
	[17.538, 103.1],
	[17.566, 102],
	[17.648, 98.6],
	[17.691, 97.1],
	[17.757, 95.5],
	[17.824, 94.9],
	[17.905, 94.6],
	[17.946, 94.9],
	[17.986, 94.6],
	[18.083, 93.2],
	[18.266, 89.7],
	[18.289, 89.3],
	[18.361, 87.3],
	[18.427, 86.3],
	[18.498, 88.4],
	[18.553, 89],
	[18.626, 88.7],
	[18.687, 86.3],
	[18.784, 85.7],
	[18.877, 78.6],
	[18.93, 75.8],
	[18.984, 75.3],
	[19.115, 68.7],
	[19.183, 66.1],
	[19.34, 61.9],
	[19.459, 59.4],
	[19.519, 58.2],
	[19.842, 51.8],
	[20.35, 43.7],
	[20.579, 38.8],
	[20.8, 35.6],
	[20.969, 34.4],
	[21.033, 34.2],
	[21.078, 34.2],
	[21.113, 34],
	[21.305, 32.7],
	[21.42, 30.8],
	[21.524, 27.5],
	[21.722, 22.8],
	[21.768, 21.7],
	[22.085, 16.6],
	[22.174, 14.9],
	[22.232, 13.9],
	[22.295, 12.9],
	[22.689, 12.8],
	[23.069, 10.8],
	[23.27, 10.4],
	[23.348, 10.5],
	[23.6, 9.7],
	[23.682, 8.3],
	[23.745, 7.8],
	[23.851, 7.3],
	[24.162, 6.6],
	[24.202, 6.4],
	[24.224, 6.4],
	[24.444, 6.3],
	[24.5, 5.8],
	[24.793, 5],
	[25.078, 4.5],
	[25.233, 6.4],
	[25.292, 6.1],
	[25.534, 6.6],
	[25.777, 5.9],
	[25.952, 5.6],
	[26.128, 7.8],
	[26.295, 5],
	[26.562, 4.2],
	[26.607, 8.1],
	[26.661, 2.1],
	[27.091, 7.1],
	[27.392, 8.2],
	[27.523, 8.7],
	[27.687, 8.8],
	[27.837, 9.7],
	[28.047, 8.8],
	[28.337, 9.5],
	[28.467, 9.2],
	[28.618, 10.2],
	[28.695, 10],
	[28.84, 8.6],
	[28.972, 7.3],
	[29.097, 6.7],
	[29.141, 6.5],
	[29.221, 8],
	[29.458, 9],
	[29.928, 18.1],
	[30.016, 15.9],
	[30.104, 12.4],
	[30.221, 10.6],
	[30.377, 11.3],
	[30.422, 11.3],
	[30.46, 11.4],
	[30.525, 12.1],
	[30.59, 12.5],
	[30.621, 12.2],
	[30.925, 13.4],
	[30.973, 12.9],
	[31.217, 8.8],
	[31.261, 8.9],
	[31.455, 11.9],
	[31.546, 14.2],
	[31.698, 19.2],
	[31.758, 21.2],
	[31.94, 20.2],
	[31.997, 18.2],
	[32.299, 8.5],
	[32.343, 8.3],
	[32.411, 8],
	[32.454, 8.1],
	[32.566, 10.5],
	[32.632, 13.3],
	[32.688, 15.5],
	[32.727, 17],
	[32.87, 22.4],
	[33.045, 23.1],
	[33.098, 23.1],
	[33.143, 23.2],
	[33.376, 23.2],
	[33.433, 22.9],
	[33.753, 20],
	[33.992, 20.8],
	[34.11, 21.1],
	[34.171, 21.2],
	[34.277, 21.5],
	[34.481, 21.6],
	[34.617, 21.2],
	[34.749, 20.8],
	[34.945, 16.4],
	[35.004, 16.2],
	[35.085, 16.3],
	[35.128, 16.7],
	[35.339, 19.1],
	[35.658, 21.7],
	[35.999, 18.7],
	[36.05, 18.7],
	[36.1, 18.3],
	[36.144, 18.1],
	[36.49, 15.5],
	[36.795, 14.9],
	[36.879, 13.4],
	[37.701, 12.9],
	[37.77, 13.1],
	[37.791, 12],
	[38, 15.5],
	[38.725, 19],
	[38.904, 19.8],
	[38.917, 19.7],
	[38.964, 19.6],
	[39.286, 20.2],
	[39.316, 20.5],
	[39.365, 20.9],
	[39.437, 19.9],
	[39.612, 14.5],
	[39.697, 11.7],
	[39.799, 11.9],
	[39.834, 11.7],
	[39.856, 11.6],
	[39.887, 11.4],
	[39.93, 11.2],
	[39.973, 11.1],
	[40.121, 10],
	[40.332, 9.5],
	[40.361, 9.3],
	[40.416, 8.2],
	[40.772, 6.1],
	[40.924, 5],
	[41.047, 4.9],
	[41.064, 5],
	[41.132, 8.8],
	[41.186, 9.2],
	[41.215, 5],
	[41.262, 10.3],
	[41.307, 8.7],
	[41.541, 3.7],
	[41.638, 3.3],
	[41.698, 3.3],
	[41.749, 3.5],
	[41.798, 3.5],
	[41.837, 3.3],
	[41.878, 3.4],
	[42, 3.4],
	[42.033, 3.5],
	[42.068, 1.7],
	[42.1, 3.8],
	[42.137, 4],
	[42.311, 6.1],
	[42.473, 6.8],
	[42.53, 6.6],
	[42.569, 6.7],
	[42.793, 8.4],
	[42.899, 8.6],
	[42.996, 8.8],
	[43.303, 8.7],
	[43.426, 8.8],
	[43.82, 9],
	[44.027, 9.5],
	[44.258, 9.3],
	[44.501, 8.9],
	[44.735, 8.1],
	[44.798, 7.9],
	[44.88, 8],
	[44.99, 10.3],
	[45.126, 12.7],
	[45.324, 11],
	[45.401, 4.3],
	[45.422, 4],
	[45.784, 2],
	[46.104, 6.3],
	[46.256, 5.7],
	[46.323, 4.7],
	[46.399, 4.4],
	[46.46, 2.5],
	[46.51, 4.1],
	[46.856, 3.9],
	[46.919, 3.7],
	[46.976, 4.2],
	[47.065, 4.9],
	[47.13, 5.6],
	[47.207, 6.3],
	[47.301, 7.2],
	[47.426, 8.1],
	[47.748, 8.1],
	[47.837, 7.9],
	[47.986, 7.7],
	[48.26, 9.5],
	[48.418, 11.5],
	[48.512, 11.3],
	[48.564, 10.4],
	[48.781, 6.8],
	[49.181, 8.3],
	[49.275, 8.4],
	[49.351, 8.1],
	[49.667, 6.4],
	[50.094, 6.2],
	[50.187, 6.1],
	[50.234, 6.1],
	[50.312, 6],
	[50.729, 6.4],
	[51.173, 8],
	[51.478, 6.3],
	[51.626, 6.3],
	[51.654, 6.1],
	[51.825, 5.9],
	[51.924, 5.9],
	[52.008, 5.9],
	[52.381, 6.1],
	[52.483, 6.8],
	[52.588, 7.8],
	[52.708, 9.1],
	[52.838, 8.9],
	[52.942, 8.5],
	[53.47, 9.2],
	[53.674, 10.8],
	[53.754, 9.7],
	[53.826, 9.3],
	[54.333, 10.4],
	[54.865, 8.6],
	[55.12, 9.3],
	[55.168, 8.8],
	[55.218, 8.2],
	[55.274, 7.6],
	[55.59, 6.8],
	[55.651, 7.2],
	[55.711, 7.6],
	[55.756, 8],
	[55.784, 8],
	[55.891, 8.4],
	[55.994, 9],
	[56.191, 9.9],
	[56.265, 10],
	[56.406, 10.7],
	[56.568, 10.5],
	[56.622, 10.1],
	[56.756, 11.5],
	[56.89, 12],
	[57.04, 14],
	[57.106, 15],
	[57.186, 19.6],
	[57.221, 21.2],
	[57.504, 11.8],
	[57.571, 11],
	[57.624, 9.1],
	[57.662, 9.1],
	[57.762, 11.7],
	[57.912, 22],
	[58.064, 31.5],
	[58.126, 34.4],
	[58.225, 41.3],
	[58.264, 43],
	[58.403, 45.5],
	[58.436, 45.6],
	[58.486, 46],
	[58.646, 51],
	[58.794, 52.4],
	[59.07, 54.8],
	[59.146, 55.3],
	[59.36, 53.5],
	[59.4, 53.1],
	[59.481, 52.8],
	[59.517, 52.6],
	[59.823, 55.6],
	[59.856, 55.3],
	[59.964, 54.6],
	[60.248, 53.1],
	[60.447, 53.5],
	[60.579, 52.4],
	[60.661, 52],
	[60.81, 50.8],
	[61.158, 48.7],
	[61.288, 47],
	[61.421, 48.4],
	[61.498, 48.9],
	[61.562, 49.3],
	[61.766, 51.2],
	[61.812, 51.6],
	[61.918, 52.6],
	[62.115, 58.1],
	[62.19, 61.1],
	[62.269, 64.1],
	[62.298, 65.1],
	[62.339, 66.2],
	[62.383, 67.7],
	[62.435, 69.1],
	[62.479, 68.5],
	[62.526, 67.8],
	[62.604, 67.4],
	[62.648, 66.8],
	[62.711, 65],
	[62.743, 64],
	[62.775, 63],
	[62.804, 62],
	[62.852, 60.7],
	[62.896, 59.7],
	[62.937, 59],
	[62.983, 59.1],
	[63.141, 63.5],
	[63.198, 62.5],
	[63.328, 59],
	[63.396, 58],
	[63.459, 55.5],
	[63.5, 53.8],
	[63.651, 48.8],
	[63.715, 46.5],
	[64.002, 33.5],
	[64.25, 25.7],
	[64.338, 24.2],
	[64.398, 22],
	[64.523, 22.8],
	[64.612, 24.5],
	[64.688, 26.6],
	[64.753, 28.4],
	[64.827, 30.5],
	[65.14, 33.7],
	[65.188, 33.9],
	[65.276, 35.8],
	[65.359, 38],
	[65.675, 41.7],
	[65.752, 39.7],
	[65.964, 34.4],
	[66.025, 32.9],
	[66.055, 32],
	[66.206, 28],
	[66.277, 26.8],
	[66.325, 25.9],
	[66.387, 25],
	[66.468, 23.8],
	[66.546, 25.5],
	[66.616, 26],
	[66.673, 26.9],
	[66.735, 24.2],
	[66.788, 22.7],
	[67.024, 22],
	[67.07, 21],
	[67.124, 19.9],
	[67.4, 21],
	[67.654, 18.7],
	[67.861, 18.3],
	[68.097, 18.9],
	[68.189, 19.4],
	[68.316, 19.7],
	[68.355, 19.3],
	[68.525, 19.1],
	[68.614, 19.6],
	[68.663, 19],
	[68.842, 19.6],
	[68.893, 20],
	[68.944, 20],
	[69.169, 21.1],
	[69.251, 21.5],
	[69.313, 21.8],
	[69.396, 22.4],
	[69.462, 23.4],
	[69.507, 24],
	[69.69, 25.6],
	[69.743, 25.8],
	[70.049, 30.2],
	[70.092, 30.9],
	[70.306, 33.3],
	[70.371, 34.3],
	[70.499, 36.6],
	[70.567, 37.9],
	[70.651, 39.2],
	[70.801, 43.9],
	[70.855, 46.2],
	[70.942, 48.8],
	[71.129, 54.9],
	[71.251, 57.9],
	[71.291, 57.5],
	[71.347, 56.3],
	[71.399, 54.6],
	[71.445, 53.6],
	[71.545, 52.4],
	[71.624, 51.1],
	[71.697, 49.3],
	[71.862, 43.7],
	[71.91, 42.2],
	[71.985, 40.3],
	[72.045, 38.5],
	[72.207, 34.3],
	[72.239, 33.9],
	[72.263, 33.4],
	[72.339, 31.9],
	[72.377, 30.9],
	[72.591, 25.6],
	[72.697, 23.2],
	[72.763, 21.7],
	[72.826, 20],
	[72.904, 18],
	[72.978, 16.6],
	[73.054, 16.2],
	[73.177, 15.8],
	[73.232, 15.5],
	[73.298, 14.8],
	[73.35, 13.7],
	[73.505, 11.8],
	[73.58, 11],
	[73.719, 9.2],
	[73.997, 8.6],
	[74.386, 7],
	[74.455, 7],
	[74.471, 6.9],
	[74.747, 7.9],
	[74.832, 8.5],
	[74.981, 10],
	[75.147, 6.8],
	[75.255, 5.9],
	[75.41, 4.9],
	[75.509, 4.4],
	[75.556, 4.3],
	[75.879, 2.9],
	[76.355, 2.3],
	[76.621, 2.4],
	[77, 2.4],
	[77.374, 3],
	[77.439, 3.1],
	[77.587, 1.9],
	[77.66, 2],
	[78.187, 2.7],
	[78.236, 2.8],
	[78.538, 1],
	[78.809, 3.8],
	[79.012, 2.4],
	[79.069, 2.6],
	[79.134, 2.9],
	[79.458, 4.2],
	[79.862, 3.7],
	[80.335, 3.4],
	[80.542, 5.2],
	[80.693, 6],
	[80.886, 6.9],
	[80.995, 6.2],
	[81.134, 6.5],
	[81.278, 6],
	[81.822, 1.8],
	[82.16, 2.1],
	[82.24, 1.9],
	[82.379, 1.8],
	[82.679, 1.9],
	[82.958, 1.5],
	[83.114, 2.2],
	[83.338, 2.3],
	[83.446, 2.3],
	[83.786, 2.3],
	[84.297, 2.2],
	[85.121, 2.4],
	[85.418, 1.8],
	[85.543, 1.6],
	[85.626, 1.5],
	[85.741, 1.1],
	[85.844, 1.1],
	[85.931, 1.3],
	[86.054, 2.5],
	[86.188, 2.7],
	[86.41, 1.3],
	[86.429, 1.1],
	[86.6, 0.9],
	[86.963, 1.3],
	[87.048, 0.9],
	[87.094, 1.1],
	[87.188, 1.2],
	[87.809, 1.6],
	[88.314, 1.4],
	[88.393, 1.3],
	[89.289, 2],
	[89.509, 2.2],
	[89.972, 4.7],
	[90.07, 4.7],
	[90.23, 3.6],
	[90.37, 3],
	[90.723, 2.8],
	[91.04, 2.8],
	[91.605, 2.7],
	[91.809, 2.7],
	[92.019, 3.1],
	[92.146, 3],
	[92.491, 3.1],
	[92.604, 2.9],
	[92.742, 3],
	[93.259, 2.7],
	[93.944, 2.4],
	[94.011, 2.5],
	[94.296, 2.1],
	[94.795, 2],
	[95.296, 2],
	[95.403, 2.1],
	[95.868, 2],
	[96.11, 2.1],
	[96.312, 2.3],
	[96.458, 2.1],
	[96.546, 1.8],
	[96.66, 2.1],
	[96.773, 2.5],
	[97.355, 2.4],
	[97.638, 2.5],
	[97.768, 2.8],
	[98.12, 2.8],
	[98.158, 3],
	[98.192, 3.2],
	[98.716, 4.4],
	[99.083, 3.6],
	[99.322, 3],
	[99.531, 5.1],
	[99.626, 6.2],
	[99.719, 6.2],
	[100.085, 14.2],
	[100.133, 14.9],
	[100.163, 13.9],
	[100.274, 9.5],
	[100.491, 6.4],
	[100.69, 5.3],
	[100.784, 4.8],
	[101.094, 5],
	[101.294, 4.2],
	[101.68, 4.2],
	[102.032, 4.3],
	[102.162, 4.8],
	[102.342, 4.9],
	[102.459, 4.6],
	[102.577, 4.6],
	[102.671, 4.8],
	[102.847, 3.7],
	[103.159, 3.6],
	[103.982, 3.1],
	[104.103, 2.9],
	[104.226, 3.1],
	[104.452, 3.5],
	[104.654, 3.3],
	[105.556, 3.9],
	[105.84, 2.7],
	[106.118, 2.1],
	[106.436, 2.1],
	[106.806, 2.8],
	[107.405, 3.7],
	[107.643, 4.3],
	[108.541, 3.9],
	[108.61, 4],
	[108.663, 4.5],
	[108.815, 4.5],
	[109.053, 3.9],
	[109.196, 3],
	[109.262, 2.9],
	[109.458, 3.2],
	[109.6, 3.4],
	[109.6, 3.4]
]];

const trips = [{
	name: '往路',
	center: routes[0][0],
	bearing: 95,
	startTime: 1641078000000,
	placing: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
}, {
	name: '復路',
	center: routes[1][0],
	bearing: -50,
	startTime: 1641164400000,
	placing: [4, 8, 1, 9, 7, 12, 10, 2, 3, 5, 6, 15, 16, 20, 21, 14, 13, 11, 17, 19, 18]
}];

const sections = [[
	{name: '<i class="far fa-flag"></i>スタート 読売新聞社前', index: 0, distance: 0, record: 20.974587002474177},
	{name: '<i class="fas fa-flag"></i>鶴見中継所', index: 84, distance: 21.359121097519537, record: 21.035128937347521},
	{name: '<i class="fas fa-flag"></i>戸塚中継所', index: 226, distance: 44.43348892351547, record: 21.591783083454362},
	{name: '<i class="fas fa-flag"></i>平塚中継所', index: 359, distance: 65.81535189365847, record: 20.744999987623745},
	{name: '<i class="fas fa-flag"></i>小田原中継所', index: 510, distance: 86.73322688117908, record: 17.712562973508204},
	{name: '<i class="fas fa-flag-checkered"></i>ゴール 芦ノ湖', index: 1012, distance: 107.52088759314357}
], [
	{name: '<i class="far fa-flag"></i>スタート 芦ノ湖', index: 0, distance: 0, record: 21.726307131090458},
	{name: '<i class="fas fa-flag"></i>小田原中継所', index: 451, distance: 20.742588224877196, record: 20.698424540803006},
	{name: '<i class="fas fa-flag"></i>平塚中継所', index: 604, distance: 42.01596900292473, record: 20.134210055242527},
	{name: '<i class="fas fa-flag"></i>戸塚中継所', index: 761, distance: 63.43093853112574, record: 20.412455085006607},
	{name: '<i class="fas fa-flag"></i>鶴見中継所', index: 916, distance: 86.57072442054573, record: 20.164279580823364},
	{name: '<i class="fas fa-flag-checkered"></i>ゴール 読売新聞社前', index: 1003, distance: 109.64762216304358}
]];

const teams = [{
	name: ''
}, {
	name: '駒澤大学',
	shortName: '駒澤',
	runners: ['唐澤 拓海 (2年)', '田澤 廉 (3年)', '安原 太陽 (2年)', '花尾 恭輔 (2年)', '金子 伊吹 (2年)', '佃 康平 (4年)', '白鳥 哲汰 (2年)', '鈴木 芽吹 (2年)', '山野 力 (3年)', '青柿 響 (2年)']
}, {
	name: '創価大学',
	shortName: '創価',
	runners: ['葛西 潤 (2年)', 'Ｐ・ムルワ (3年)', '桑田 大輔 (2年)', '嶋津 雄大 (4年)', '三上 雄太 (4年)', '濱野 将基 (3年)', '新家 裕太郎 (3年)', '吉田 凌 (1年)', '中武 泰希 (4年)', '松田 爽汰 (3年)']
}, {
	name: '東洋大学',
	shortName: '東洋',
	runners: ['児玉 悠輔 (3年)', '松山 和希 (2年)', '佐藤 真優 (2年)', '木本 大地 (3年)', '宮下 隼人 (4年)', '九嶋 恵舜 (2年)', '梅崎 蓮 (1年)', '蝦夷森 章太 (4年)', '前田 義弘 (3年)', '清野 太雅 (3年)']
}, {
	name: '青山学院大学',
	shortName: '青山学院',
	runners: ['志貴 勇斗 (2年)', '近藤 幸太郎 (3年)', '太田 蒼生 (1年)', '飯田 貴之 (4年)', '若林 宏樹 (1年)', '髙橋 勇輝 (4年)', '岸本 大紀 (3年)', '佐藤 一世 (2年)', '中村 唯翔 (3年)', '中倉 啓敦 (3年)']
}, {
	name: '東海大学',
	shortName: '東海',
	runners: ['市村 朋樹 (4年)', '松崎 咲人 (3年)', '神薗 竜馬 (2年)', '本間 敬大 (4年)', '吉田 響 (1年)', '川上 勇士 (3年)', '越 陽汰 (1年)', '入田 優希 (2年)', '竹村 拓真 (3年)', '吉冨 裕太 (4年)']
}, {
	name: '早稲田大学',
	shortName: '早稲田',
	runners: ['井川 龍人 (3年)', '中谷 雄飛 (4年)', '太田 直希 (4年)', '石塚 陽士 (1年)', '伊藤 大志 (1年)', '栁本 匡哉 (2年)', '鈴木 創士 (3年)', '千明 龍之佑 (4年)', '佐藤 航希 (2年)', '山口 賢助 (4年)']
}, {
	name: '順天堂大学',
	shortName: '順天堂',
	runners: ['平 駿介 (3年)', '三浦 龍司 (2年)', '伊豫田 達弥 (3年)', '石井 一希 (2年)', '四釜 峻佑 (3年)', '牧瀬 圭斗 (4年)', '西澤 侑真 (3年)', '津田 将希 (4年)', '野村 優作 (3年)', '近藤 亮太 (4年)']
}, {
	name: '帝京大学',
	shortName: '帝京',
	runners: ['小野 隆一朗 (2年)', '中村 風馬 (4年)', '遠藤 大地 (4年)', '寺嶌 渓一 (4年)', '細谷 翔馬 (4年)', '北野 開平 (3年)', '福島 渉太 (1年)', '橋本 尚斗 (4年)', '森田 瑛介 (4年)', '西脇 翔太 (2年)']
}, {
	name: '國學院大學',
	shortName: '國學院',
	runners: ['藤木 宏太 (4年)', '伊地知 賢造 (2年)', '山本 歩夢 (1年)', '中西 大翔 (3年)', '殿地 琢朗 (4年)', '原 秀寿 (1年)', '木付 琳 (4年)', '石川 航平 (4年)', '平林 清澄 (1年)', '相澤 龍明 (4年)']
}, {
	name: '東京国際大学',
	shortName: '東京国際',
	runners: ['山谷 昌也 (3年)', 'Y・ヴィンセント (3年)', '丹所 健 (3年)', '堀畑 佳吾 (3年)', '倉掛 響 (1年)', '林 優策 (2年)', '冨永 昌輝 (1年)', '村松 敬哲 (2年)', '宗像 聖 (3年)', '野澤 巧理 (4年)']
}, {
	name: '明治大学',
	shortName: '明治',
	runners: ['手嶋 杏丞 (4年)', '鈴木 聖人 (4年)', '児玉 真輝 (2年)', '小澤 大輝 (3年)', '下條 乃將 (3年)', '杉本 龍陽 (3年)', '富田 峻平 (3年)', '櫛田 佳希 (3年)', '加藤 大誠 (3年)', '橋本 大輝 (4年)']
}, {
	name: '中央大学',
	shortName: '中央',
	runners: ['吉居 大和 (2年)', '手島 駿 (4年)', '三浦 拓朗 (4年)', '中野 翔太 (2年)', '阿部 陽樹 (1年)', '若林 陽大 (3年)', '居田 優太 (2年)', '中澤 雄大 (3年)', '湯浅 仁 (2年)', '井上 大輝 (4年)']
}, {
	name: '日本体育大学',
	shortName: '日本体育',
	runners: ['髙津 浩揮 (3年)', '藤本 珠輝 (3年)', '大畑 怜士 (4年)', '分須 尊紀 (1年)', '吉冨 純也 (2年)', '盛本 聖也 (3年)', '漆畑 徳輝 (2年)', '九嶋 大雅 (3年)', '大内 宏樹 (4年)', '佐藤 慎巴 (4年)']
}, {
	name: '山梨学院大学',
	shortName: '山梨学院',
	runners: ['木山 達哉 (3年)', 'Ｐ・オニエゴ (4年)', '高田 尚暉 (1年)', '伊東 大暉 (3年)', '成毛 志優 (4年)', '矢島 洸一 (4年)', '川口 航士郎 (4年)', '橘田 大河 (3年)', '石部 夏希 (3年)', '篠原 楓 (3年)']
}, {
	name: '神奈川大学',
	shortName: '神奈川',
	runners: ['巻田 理空 (2年)', '西方 大珠 (4年)', '宇津野 篤 (2年)', '小林 政澄 (2年)', '山﨑 諒介 (3年)', '横澤 清己 (4年)', '川口 慧 (4年)', '大泉 真尋 (2年)', '小林 篤貴 (2年)', '有村 祐亮 (3年)']
}, {
	name: '法政大学',
	shortName: '法政',
	runners: ['内田 隼太 (3年)', '鎌田 航生 (4年)', '小泉 樹 (1年)', '河田 太一平 (3年)', '細迫 海気 (2年)', '武田 和馬 (1年)', '中園 慎太朗 (3年)', '稲毛 崇斗 (2年)', '清家 陸 (4年)', '川上 有生 (3年)']
}, {
	name: '中央学院大学',
	shortName: '中央学院',
	runners: ['栗原 啓吾 (4年)', '吉田 礼志 (1年)', '武川 流以名 (3年)', '伊藤 秀虎 (2年)', '吉本 光希 (3年)', '工藤 巧夢 (1年)', '松井 尚希 (4年)', '馬場 竜之介 (4年)', '吉田 光汰 (4年)', '中島 稜貴 (3年)']
}, {
	name: '駿河台大学',
	shortName: '駿河台',
	runners: ['清野 太成 (3年)', 'Ｊ・ブヌカ (4年)', '町田 康誠 (3年)', '今井 隆生 (4年)', '永井 竜二 (3年)', '小泉 謙 (3年)', '新山 舜心 (2年)', '出仙 龍之介 (3年)', '田尻 健 (4年)', '阪本 大貴 (4年)']
}, {
	name: '専修大学',
	shortName: '専修',
	runners: ['木村 暁仁 (2年)', '髙瀨 桂 (3年)', 'D・キサイサ (1年)', '水谷 勇登 (2年)', '野下 稜平 (2年)', '横山 佑羽 (4年)', '国増 治貴 (3年)', '岩間 暁 (4年)', '服部 友太 (4年)', '中山 敦貴 (2年)']
}, {
	name: '国士舘大学',
	shortName: '国士舘',
	runners: ['木榑 杏祐 (4年)', 'R・ヴィンセント (4年)', '荻原 陸斗 (4年)', '三代 和弥 (4年)', '山本 雷我 (2年)', '福井 大夢 (3年)', '清水 拓斗 (4年)', '山本 龍神 (2年)', '綱島 辰弥 (3年)', '望月 武 (3年)']
}, {
	name: '関東学生連合',
	shortName: '学生連合',
	runners: ['中山 雄太 (3年)', '並木 寧音 (2年)', '斎藤 俊輔 (4年)', '村上 航大 (3年)', '福谷 颯太 (3年)', '鈴木 康也 (1年)', '田島 公太郎 (1年)', '大野 陽人 (3年)', '竹井 祐貴 (4年)', '諸星 颯大 (3年)']
}];

let replayData;
let replayDataIndex = 0;
fetch('hakone-2022.json.gz').then(async response => {
	const reader = response.body.getReader(),
		inflate = new pako.Inflate({to: 'string'});

	while (true) {
		const {done, value} = await reader.read();

		if (done) {
			replayData = JSON.parse(inflate.result);
			for (const point of replayData[225].points) {
				teams[point[0]]._speed = point[5] / (340 / 3600);
			}
			break;
		}
		inflate.push(value);
	}
});

const trackingModes = [
	'auto',
	'normal',
	'front',
	'front-above',
	'back',
	'back-above',
	'drone',
	'helicopter',
	'bird'
];
const trackingParams = {
	zoom: {},
	bearing: {},
	pitch: {}
};

const charts = [];

const SQRT3 = Math.sqrt(3);

//let trip = new Date(Date.now() + (new Date().getTimezoneOffset() + 540) * 60000).getDate() % 2;
let trip = 0;
let clockOffset = Date.now() - (trips[trip].startTime - 15000);
const routeFeatures = routes.map(route => turf.lineString(route));

for (const team of teams) {
	team.distance = 0;
	team.speed = team._speed = 19.6 - Math.random() * 0.6;
	team.ts = trips[trip].startTime / 1000;
	team.speedHistory = [{d: [], s: []}, {d: [], s: []}];
	team.offset = Math.random() * 6 - 3;
	team.estimatedDistance = 0;
	team.estimatedSection = 0;
}

let modelOrigin;
let modelScale;

let trackingTeam;
let trackingMode = 'front';
let autoTrackingMode = true;
let lastDataLoad = 0;
let lastViewSwitch = Date.now() - clockOffset;
let trackingAnimationID;
let chartSection;

class MapboxGLButtonControl {

	constructor(optionArray) {
		this._options = optionArray.map(options => ({
			className: options.className || '',
			title: options.title || '',
			eventHandler: options.eventHandler
		}));
	}

	onAdd(map) {
		const me = this;

		me._map = map;

		me._container = document.createElement('div');
		me._container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';

		me._buttons = me._options.map(options => {
			const button = document.createElement('button'),
				icon = document.createElement('span'),
				{className, title, eventHandler} = options;

			button.className = className;
			button.type = 'button';
			button.title = title;
			button.setAttribute('aria-label', title);
			button.onclick = eventHandler;

			icon.className = 'mapboxgl-ctrl-icon';
			icon.setAttribute('aria-hidden', true);
			button.appendChild(icon);

			me._container.appendChild(button);

			return button;
		});

		return me._container;
	}

	onRemove() {
		const me = this;

		me._container.parentNode.removeChild(me._container);
		me._map = undefined;
	}

}

class RunnerLayer {

	constructor(options) {
		const me = this;

		me.id = options.id;
		me.type = 'custom';
		me.renderingMode = '3d';
	}

	onAdd(map, gl) {
		const me = this,
			// {_fov, width, height} = map.transform,
			gltfLoader = new THREE.GLTFLoader(),
			textureLoader = new THREE.TextureLoader(),
			renderer = me.renderer = new THREE.WebGLRenderer({
				canvas: map.getCanvas(),
				context: gl
			}),
			scene = me.scene = new THREE.Scene(),
			light = me.light = new THREE.DirectionalLight(0xffffff, .8),
			ambientLight = me.ambientLight = new THREE.AmbientLight(0xffffff, .4);

		renderer.outputEncoding = THREE.sRGBEncoding;
		renderer.autoClear = false;

		scene.add(light);
		scene.add(ambientLight);

		// This is needed to avoid a black screen with empty scene
		// scene.add(new Mesh());

		gltfLoader.load('runner.glb', gltf => {
			const mesh = gltf.scene;

			mesh.position.x = 0;
			mesh.position.y = 0;
			mesh.position.z = 0;
			mesh.rotation.x = Math.PI / 2;
			mesh.rotation.y = Math.PI;
			mesh.rotation.z = 0;

			for (let i = 1; i < teams.length; i++) {
				const team = teams[i],
					object = THREE.SkeletonUtils.clone(mesh);

				const texture = textureLoader.load(`textures/${i}.png`);
				texture.encoding = THREE.sRGBEncoding;
				texture.flipY = false;
				const material = new THREE.MeshPhongMaterial({
					map: texture,
					transparent: true
				});
				object.traverse(child => {
					if (child.isMesh) {
						child.material = material;
					}
				});

				team.object = new THREE.Object3D();
				team.object.scale.x = modelScale * 5;
				team.object.scale.y = modelScale * 5;
				team.object.scale.z = modelScale * 5;
				team.object.add(object);

				team.object2 = THREE.SkeletonUtils.clone(team.object);

				scene.add(team.object);

				team.object.userData.mixer = new THREE.AnimationMixer(team.object);
				team.object.userData.mixer.clipAction(gltf.animations[2]).play();

				scene.add(team.object2);

				team.object2.userData.mixer = new THREE.AnimationMixer(team.object2);
				team.object2.userData.actions = gltf.animations.slice(2, 4).map(
					clip => team.object2.userData.mixer.clipAction(clip).play()
				);
				team.object2.userData.duration = 20 / 24;
			}


			const animate = () => {
				for (let i = 1; i < teams.length; i++) {
					const {object, object2} = teams[i],
						duration = 20 / 24,
						duration2 = object2.userData.duration;

					if (object) {
						object.userData.mixer.setTime((performance.now() / 750 + i / teams.length * duration) % duration);
					}
					if (object2) {
						object2.userData.mixer.setTime((performance.now() / 750 + i / teams.length * duration2) % duration2);
					}
				}
				requestAnimationFrame(animate);
			};

			animate();
		});

		me.map = map;
		me.camera = new THREE.Camera();

		/*map.on('resize', event => {
			const {width, height} = event.target.transform;

			me.camera.aspect = width / height;
			me.camera.updateProjectionMatrix();
		});*/
	}

	render(gl, matrix) {
		const me = this,
			m = new THREE.Matrix4().fromArray(matrix),
			l = new THREE.Matrix4()
				.makeTranslation(modelOrigin.x, modelOrigin.y, modelOrigin.z)
				.scale(new THREE.Vector3(1, -1, 1)),
			rad = THREE.MathUtils.degToRad(me.map.getBearing() + 30);

		me.camera.projectionMatrix = m.multiply(l);
		me.light.position.set(-Math.sin(rad), -Math.cos(rad), SQRT3).normalize();
		me.renderer.resetState();
		me.renderer.render(me.scene, me.camera);
		me.map.triggerRepaint();
	}

}

function clamp(value, lower, upper) {
	return Math.min(Math.max(value, lower), upper);
}

function easeOutQuart(t) {
	return -((t = t - 1) * t * t * t - 1);
}

function createInterpolant(xs, ys) {
	const length = xs.length;

	// Get consecutive differences and slopes
	const dys = [], dxs = [], ms = [];
	for (let i = 0; i < length - 1; i++) {
		const dx = xs[i + 1] - xs[i], dy = ys[i + 1] - ys[i];
		dxs.push(dx); dys.push(dy); ms.push(dy / dx);
	}

	// Get degree-1 coefficients
	const c1s = [ms[0]];
	for (let i = 0; i < dxs.length - 1; i++) {
		const m = ms[i], mNext = ms[i + 1];
		if (m * mNext <= 0) {
			c1s.push(0);
		} else {
			const dx_ = dxs[i], dxNext = dxs[i + 1], common = dx_ + dxNext;
			c1s.push(3 * common / ((common + dxNext)/m + (common + dx_) / mNext));
		}
	}
	c1s.push(ms[ms.length - 1]);

	// Get degree-2 and degree-3 coefficients
	var c2s = [], c3s = [];
	for (let i = 0; i < c1s.length - 1; i++) {
		const c1 = c1s[i], m_ = ms[i], invDx = 1/dxs[i], common_ = c1 + c1s[i + 1] - m_ - m_;
		c2s.push((m_ - c1 - common_) * invDx); c3s.push(common_ * invDx * invDx);
	}

	// Return interpolant function
	return x => {
		// The rightmost point in the dataset should give an exact result
		let i = xs.length - 1;
		if (x == xs[i]) {
			return ys[i];
		}

		// Search for the interval x is in, returning the corresponding y if x is one of the original xs
		let low = 0, mid, high = c3s.length - 1;
		while (low <= high) {
			mid = Math.floor(0.5 * (low + high));
			var xHere = xs[mid];
			if (xHere < x) {
				low = mid + 1;
			}
			else if (xHere > x) {
				high = mid - 1;
			}
			else {
				return ys[mid];
			}
		}
		i = Math.max(0, high);

		// Interpolate
		const diff = x - xs[i], diffSq = diff * diff;
		return ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq;
	};
};

function updateTrackingParams() {
	const now = performance.now();

	if (trackingMode === 'bird') {
		const {zoom, bearing, pitch} = trackingParams;

		if (!zoom.time) {
			const time = zoom.time = [0, now, 0, 0],
				value = zoom.value = [0, map.getZoom(), 0, 0];
			for (const [i, j] of [[0, 1], [2, 1], [3, 2]]) {
				time[i] = time[j] + Math.sign(i - j) * (Math.random() * 10000 + 30000);
				value[i] = Math.random() * 6 + 16;
			}
			zoom.fn = createInterpolant(time, value);
		} else if (now >= zoom.time[2]) {
			zoom.time = zoom.time.slice(1).concat(zoom.time[3] + Math.random() * 10000 + 30000);
			zoom.value = zoom.value.slice(1).concat(Math.random() * 6 + 16);
			zoom.fn = createInterpolant(zoom.time, zoom.value);
		}
		if (!bearing.time) {
			const time = bearing.time = [0, now, 0, 0],
				value = bearing.value = [0, map.getBearing(), 0, 0];
			for (const [i, j] of [[0, 1], [2, 1], [3, 2]]) {
				time[i] = time[j] + Math.sign(i - j) * (Math.random() * 10000 + 40000);
				value[i] = Math.random() * 360 - 180;
			}
			bearing.fn = createInterpolant(time, value);
		} else if (now >= bearing.time[2]) {
			bearing.time = bearing.time.slice(1).concat(bearing.time[3] + Math.random() * 10000 + 40000);
			bearing.value = bearing.value.slice(1).concat(Math.random() * 360 - 180);
			bearing.fn = createInterpolant(bearing.time, bearing.value);
		}
		if (!pitch.time) {
			const time = pitch.time = [0, now, 0, 0],
				value = pitch.value = [0, map.getPitch(), 0, 0];
			for (const [i, j] of [[0, 1], [2, 1], [3, 2]]) {
				time[i] = time[j] + Math.sign(i - j) * (Math.random() * 10000 + 20000);
				value[i] = Math.random() * 30 + 45;
			}
			pitch.fn = createInterpolant(time, value);
		} else if (now >= pitch.time[2]) {
			pitch.time = pitch.time.slice(1).concat(pitch.time[3] + Math.random() * 10000 + 20000);
			pitch.value = pitch.value.slice(1).concat(Math.random() * 30 + 45);
			pitch.fn = createInterpolant(pitch.time, pitch.value);
		}
	} else {
		delete trackingParams.zoom.time;
		delete trackingParams.bearing.time;
		delete trackingParams.pitch.time;
		if (trackingMode === 'drone') {
			const bearing = map.getBearing();
			trackingParams.bearing.fn = t => (bearing - (t - now) / 200) % 360;
		} else if (trackingMode === 'helicopter') {
			const bearing = map.getBearing();
			trackingParams.bearing.fn = t => (bearing + (t - now) / 400) % 360;
		}
	}
}

function jumpTo(options) {
	const now = performance.now(),
		currentZoom = map.getZoom(),
		currentBearing = map.getBearing(),
		currentPitch = map.getPitch(),
		scrollZooming = map.scrollZoom._active;
	let zoom, pitch,
		{center, bearing, factor, bearingFactor} = options;

	if (trackingMode === 'normal') {
		zoom = currentZoom;
		bearing = currentBearing;
		pitch = currentPitch;
	} else if (trackingMode === 'drone') {
		zoom = 19;
		bearing = trackingParams.bearing.fn(now);
		pitch = 80;
	} else if (trackingMode === 'helicopter') {
		zoom = 17;
		bearing = trackingParams.bearing.fn(now);
		pitch = 60;
	} else if (trackingMode === 'bird') {
		updateTrackingParams();
		zoom = trackingParams.zoom.fn(now);
		bearing = trackingParams.bearing.fn(now);
		pitch = trackingParams.pitch.fn(now);
	} else {
		if (trackingMode === 'front' || trackingMode === 'front-above') {
			bearing = (bearing + 360) % 360 - 180;
		}
		if (trackingMode === 'front') {
			bearing += 5;
		} else if (trackingMode === 'back') {
			bearing -= 5;
		}
		if (bearingFactor >= 0) {
			bearing = currentBearing + ((bearing - currentBearing + 540) % 360 - 180) * bearingFactor;
		}
		if (trackingMode === 'front' || trackingMode === 'back') {
			zoom = 21;
			pitch = 85;
		} else {
			zoom = 17;
			pitch = 60;
		}
	}

	if (factor >= 0) {
		const {lng: fromLng, lat: fromLat} = map.getCenter(),
			[toLng, toLat] = center;

		center = new mapboxgl.LngLat(
			fromLng + (toLng - fromLng) * factor,
			fromLat + (toLat - fromLat) * factor
		);
		zoom = currentZoom + (zoom - currentZoom) * factor;
		pitch = currentPitch + (pitch - currentPitch) * factor;
	}

	map.jumpTo({center, zoom, bearing, pitch}, {auto: true});

	// Workaround for the issue of the scroll zoom during tracking
	if (scrollZooming) {
		map.scrollZoom._active = true;
	}
}

function stopTrackingAnimation() {
	if (trackingAnimationID) {
		cancelAnimationFrame(trackingAnimationID);
		trackingAnimationID = undefined;
	}
}

function startTrackingAnimation() {
	const start = performance.now();
	let t2 = 0;

	const animate = () => {
		const elapsed = Math.min(performance.now() - start, 3000),
			t1 = easeOutQuart(elapsed / 3000),
			factor = 1 - (1 - t1) / (1 - t2),
			{coord, bearing} = teams[trackingTeam];

		jumpTo({
			center: coord,
			bearing,
			factor: factor,
			bearingFactor: factor
		});
		t2 = t1;

		if (elapsed === 3000) {
			trackingAnimationID = undefined;
		} else {
			trackingAnimationID = requestAnimationFrame(animate);
		}
	};

	stopTrackingAnimation();
	updateTrackingParams();
	animate();
}

function getSection(distance) {
	for (let i = 1; i < sections[trip].length - 1; i++) {
		const section = sections[trip][i];

		if (distance < section.distance) {
			return i - 1;
		}
	}
	return sections[trip].length - 2;
}

function updateStations() {
	for (const section of sections[1 - trip]) {
		if (section.popup) {
			section.popup.remove();
		}
	}

	for (const section of sections[trip]) {
		const {name, index, distance} = section,
			point1 = turf.along(routeFeatures[trip], distance),
			point2 = turf.along(routeFeatures[trip], distance + 0.001),
			bearing = turf.bearing(point2, point1) - 10,
			coord = turf.getCoord(point1);

		section.popup = new AnimatedPopup({closeButton: false, closeOnClick: false, anchor: 'bottom'})
			.setLngLat(coord)
			.setHTML(name)
			.addTo(map);
		section.popup.getElement().addEventListener('click', event => {
			trackingTeam = undefined;
			stopTrackingAnimation();
			hidePanel();
			setInteractions(false);
			map.flyTo({
				center: turf.getCoord(coord),
				zoom: 21,
				bearing,
				pitch: 80,
				easing: t => t,
				speed: 0.5
			}, {
				auto: true
			});
			map.once('moveend', () => {
				setInteractions(true);
				canvasElement.focus();
			});
		});
	}
}

let placing = trips[trip].placing.slice();

function updatePlacing() {
	placing
		.sort((a, b) => teams[b].distance - teams[a].distance)
		.forEach((v, i) => {
			const team = teams[v],
				element = document.getElementById(`team-${i + 1}`);

			team.marker.getElement().style.zIndex = 21 - i;
			element.innerText = `${i + 1}. ${team.name}`;
		});
}

function updateChart() {
	if (isNaN(trackingTeam)) {
		return;
	}

	const team = teams[trackingTeam],
		distance = team.estimatedDistance,
		section = chartSection = team.estimatedSection,
		baseDistance = sections[trip][section].distance,
		nextDistance = sections[trip][section + 1].distance,
		annotations = charts[swiper.activeIndex].config.options.plugins.annotation.annotations;

	if (swiper.activeIndex === 0) {
		for (let i = 1; i < teams.length; i++) {
			const dataset = charts[0].config.data.datasets[i - 1],
				data = dataset.data = [];
			for (let j = 0; j < teams[i].speedHistory[trip].d.length; j++) {
				const d = teams[i].speedHistory[trip].d[j];
				if (d >= baseDistance && d <= nextDistance) {
					data.push({x: d - baseDistance, y: teams[i].speedHistory[trip].s[j]});
				}
			}
			dataset.borderColor = i === trackingTeam ? 'rgb(0, 255, 0)' : 'rgba(0, 102, 0)';
			dataset.borderWidth = i === trackingTeam ? 3 : 1;
			dataset.label = `${teams[i].shortName}・${teams[i].runners[trip * 5 + section].match(/[^・ ]+ /)[0]}`;
			dataset.order = i === trackingTeam ? 0 : 1;
		}
		charts[0].config.options.plugins.title.text = `${trip * 5 + section + 1}区 ランナー速度`;
		annotations.record.yMin = annotations.record.yMax = sections[trip][section].record;
	} else {
		const data = distances[trip].slice(sections[trip][section].index, sections[trip][section + 1].index + 1);
		charts[1].config.data.datasets[0].data = data.map(([d, e]) => ({x: d - baseDistance, y: e}));
		charts[1].config.options.plugins.title.text = `${trip * 5 + section + 1}区 コース標高`;
	}

	charts[swiper.activeIndex].config.options.scales.x.max = nextDistance - baseDistance;
	annotations.position.xMin = annotations.position.xMax = distance - baseDistance;
	charts[swiper.activeIndex].update();
}

function setInteractions(enable) {
	for (const handler of ['scrollZoom', 'boxZoom', 'dragRotate', 'dragPan', 'keyboard', 'doubleClickZoom', 'touchZoomRotate']) {
		if (enable) {
			map[handler].enable();
		} else {
			map[handler].disable();
		}
	}
}

function updateModelOrigin(lngLat) {
	const elevation = map.queryTerrainElevation(lngLat);

	modelOrigin = mapboxgl.MercatorCoordinate.fromLngLat(lngLat, elevation);
	modelScale = modelOrigin.meterInMercatorCoordinateUnits();
}

const panelElement = document.getElementById('panel');

function showPanel() {
	panelElement.style.bottom = 0;
}

function hidePanel() {
	panelElement.style.bottom = 'min(-25%, -150px)';
}

const trackingStatusElement = document.getElementById('tracking-status');
const trackingInfoElement = document.getElementById('tracking-info');

function showTrackingInfo() {
	trackingStatusElement.style.display = 'inline';
	trackingInfoElement.style.display = 'table';
}

function hideTrackingInfo() {
	trackingStatusElement.style.display = 'none';
	trackingInfoElement.style.display = 'none';
}

function loadRunnerData(now, callback) {
//	fetch('https://mini-tokyo.appspot.com/hakone')
//		.then(response => response.json())
//		.then(callback);

	if (replayData) {
		const tzOffset = (new Date().getTimezoneOffset() + 540) * 60000;

		while (replayDataIndex < replayData.length - 1) {
			const s = replayData[replayDataIndex + 1].status.now.split(/[/ :]/),
				t = new Date(s[0], s[1] - 1, s[2], s[3], s[4], s[5]).getTime() - tzOffset;

			if (now < t) {
				break;
			}
			replayDataIndex++;
		}
		callback(replayData[replayDataIndex]);
	}
}

const trackingMarkerElement = document.getElementById('tracking-marker');
const trackingTeamTextElement = document.getElementById('tracking-team');
const trackingRunnerTextElement = document.getElementById('tracking-runner');

const teamsBGElement = document.getElementById('teams-bg');
const viewsBGElement = document.getElementById('views-bg');
const infoBGElement = document.getElementById('info-bg');

Chart.defaults.borderColor = 'rgba(255, 255, 255, 0.2)';
Chart.defaults.color = '#fff';

const mapbox = location.search.match(/mapbox/);
const styleFile = mapbox ? 'style-mapbox.json' : 'style.json';
const buildingLayerId = mapbox ? 'building-3d' : 'buildings4302';
const autoPaging = location.search.match(/auto/);

mapboxgl.accessToken = 'pk.eyJ1IjoibmFnaXgiLCJhIjoiY2tqZXZ1MjQ0MGE3MDJ6bzc2cmNyaWlrOSJ9.QjrikO3RTE20AMURILSTWg';
const map = new mapboxgl.Map({
	container: 'map',
	style: styleFile,
	center: trips[trip].center,
	zoom: 21,
	bearing: trips[trip].bearing,
	pitch: 80
});
map.setPadding({top: 150});

// Workaround to update pitch using constraints
const {get: getPitch, set: setPitch} = Object.getOwnPropertyDescriptor(map.transform.constructor.prototype, 'pitch');
Object.defineProperty(map.transform, 'pitch', {
	get: getPitch,
	set: function(pitch) {
		setPitch.call(this, pitch);
		this._constrain();
		this._calcMatrices();
	}
});

const canvasElement = document.querySelector('#map .mapboxgl-canvas');
const day1Element = document.getElementById('day1');
const day2Element = document.getElementById('day2');
const clockElement = document.getElementById('clock');
const sliderElement = document.getElementById('replay-slider');
const tripTextElement = document.getElementById('trip');
const sectionTextElement = document.getElementById('section');
const distanceTextElement = document.getElementById('distance');
const distanceBarElement = document.getElementById('progress');

day1Element.addEventListener('change', () => {
	trip = 0;
	clockOffset = Date.now() - trips[trip].startTime;
	lastDataLoad = 0;
	replayDataIndex = 0;
	sliderElement.value = 0;
	placing = trips[trip].placing.slice();
	trackingTeam = placing[0];
	trackingMode = 'front';
	lastViewSwitch = Date.now() - clockOffset;
	map.getSource('route').setData(routeFeatures[trip]);
	map.jumpTo({center: trips[trip].center, zoom: 21, bearing: trips[trip].bearing, pitch: 80}, {auto: true});
	updateStations();
	showPanel();
	canvasElement.focus();
});
day2Element.addEventListener('change', () => {
	trip = 1;
	clockOffset = Date.now() - trips[trip].startTime;
	lastDataLoad = 0;
	replayDataIndex = 0;
	sliderElement.value = 0;
	placing = trips[trip].placing.slice();
	trackingTeam = placing[0];
	trackingMode = 'front';
	lastViewSwitch = Date.now() - clockOffset;
	map.getSource('route').setData(routeFeatures[trip]);
	map.jumpTo({center: trips[trip].center, zoom: 21, bearing: trips[trip].bearing, pitch: 80}, {auto: true});
	updateStations();
	showPanel();
	canvasElement.focus();
});
sliderElement.addEventListener('input', () => {
	clockOffset = Date.now() - (trips[trip].startTime + parseInt(sliderElement.value));
	lastDataLoad = 0;
	replayDataIndex = 0;
	canvasElement.focus();
});

map.addControl(new mapboxgl.NavigationControl({visualizePitch: true}));
map.addControl(new mapboxgl.FullscreenControl());
map.addControl(new MapboxGLButtonControl([{
	className: 'mapboxgl-ctrl-placing',
	title: 'チーム順位・追跡',
	eventHandler() {
		teamsBGElement.style.display = 'block';
	}
}, {
	className: 'mapboxgl-ctrl-camera',
	title: 'カメラ切り替え',
	eventHandler() {
		viewsBGElement.style.display = 'block';
	}
}, {
	className: 'mapboxgl-ctrl-info',
	title: '箱根駅伝 3D について',
	eventHandler() {
		infoBGElement.style.display = 'block';
	}
}]));

teamsBGElement.addEventListener('click', () => {
	teamsBGElement.style.display = 'none';
	canvasElement.focus();
});

for (let i = 1; i < teams.length; i++) {
	const element = document.getElementById(`team-${i}`);

	element.addEventListener('click', () => {
		trackingTeam = placing[i - 1];
		if (autoTrackingMode) {
			lastViewSwitch = Date.now() - clockOffset;
		}
		startTrackingAnimation();
		showPanel();
		updateChart();
		canvasElement.focus();
	});
}

viewsBGElement.addEventListener('click', () => {
	viewsBGElement.style.display = 'none';
	canvasElement.focus();
});

for (const mode of trackingModes) {
	const element = document.getElementById(`${mode}-view`);

	element.addEventListener('click', () => {
		document.querySelector('.menu div.active').classList.remove('active');
		element.classList.add('active');

		if (mode === 'auto') {
			autoTrackingMode = true;
		} else {
			trackingMode = mode;
			autoTrackingMode = false;
		}
		if (trackingTeam) {
			if (autoTrackingMode) {
				trackingMode = trackingModes[Math.floor(Math.random() * (trackingModes.length - 2)) + 2];
				lastViewSwitch = Date.now() - clockOffset;
			}
			startTrackingAnimation();
		}
		canvasElement.focus();
	});
}

infoBGElement.addEventListener('click', () => {
	infoBGElement.style.display = 'none';
	canvasElement.focus();
});

const swiper = new Swiper('.swiper', {
	navigation: {
		nextEl: '.swiper-button-next',
		prevEl: '.swiper-button-prev'
	}
});
swiper.on('slideChange', updateChart);

charts[0] = new Chart('chart-speed', {
	type: 'line',
	data: {
		datasets: teams.slice(1).map(team => ({
			label: '',
			data: [],
			borderColor: 'rgb(0, 127, 0)',
			backgroundColor: 'rgb(0, 0, 0)',
			borderWidth: 1,
			borderCapStyle: 'round',
			borderJoinStyle: 'round',
			pointRadius: 0
		}))
	},
	options: {
		maintainAspectRatio: false,
		layout: {
			padding: {
				left: 40,
				top: 5,
				right: 50,
				bottom: 10
			}
		},
		scales: {
			x: {
				type: 'linear',
				min: 0,
				grid: {
					tickLength: 0
				}
			},
			y: {
				grid: {
					tickLength: 0
				}
			}
		},
		interaction: {
			mode: 'nearest',
			intersect: false
		},
		animation: false,
		plugins: {
			title: {
				text: '',
				display: true
			},
			legend: {
				display: false
			},
			tooltip: {
				callbacks: {
					title: context => `距離 ${context[0].parsed.x.toFixed(2)} km`,
					label: context => `${context.dataset.label} ${context.parsed.y} km/s`
				}
			},
			annotation: {
				annotations: {
					position: {
						type: 'line',
						borderColor: 'rgb(255, 0, 0)',
						xMin: 0,
						xMax: 0
					},
					record: {
						type: 'line',
						borderColor: 'rgb(255, 153, 0)',
						yMin: 0,
						yMax: 0,
						label: {
							content: '区間新',
							enabled: true,
							color: 'rgb(0, 0, 0)',
							backgroundColor: 'rgba(255, 153, 0)',
							position: '80%'
						},
						drawTime: 'beforeDatasetsDraw'
					}
				}
			}
		}
	}
});

charts[1] = new Chart('chart-elevation', {
	type: 'line',
	data: {
		datasets: [{
			data: [],
			fill: 'origin',
			backgroundColor: 'rgba(0, 102, 255, 0.3)',
			borderColor: 'rgba(51, 153, 255)',
			borderCapStyle: 'round',
			borderJoinStyle: 'round',
			pointRadius: 0
		}]
	},
	options: {
		maintainAspectRatio: false,
		layout: {
			padding: {
				left: 40,
				top: 5,
				right: 50,
				bottom: 10
			}
		},
		scales: {
			x: {
				type: 'linear',
				min: 0,
				grid: {
					tickLength: 0
				}
			},
			y: {
				min: 0,
				grid: {
					tickLength: 0
				}
			}
		},
		interaction: {
			mode: 'nearest',
			intersect: false
		},
		animation: false,
		plugins: {
			title: {
				text: '',
				display: true
			},
			legend: {
				display: false
			},
			tooltip: {
				callbacks: {
					title: context => `距離 ${context[0].parsed.x.toFixed(2)} km`,
					label: context => `標高 ${context.parsed.y} m`
				}
			},
			annotation: {
				annotations: {
					position: {
						type: 'line',
						borderColor: 'rgb(255, 0, 0)',
						xMin: 0,
						xMax: 0
					}
				}
			}
		}
	}
});

map.once('styledata', () => {
	map.addSource('route', {
		type: 'geojson',
		data: routeFeatures[trip]
	});

	map.addLayer({
		id: 'route',
		type: 'line',
		source: 'route',
		layout: {
			'line-join': 'round',
			'line-cap': 'round'
		},
		paint: {
			'line-color': 'rgba(255, 255, 0, 0.5)',
			'line-width': 4
		}
	});

	updateModelOrigin(map.getCenter());

	map.addLayer(new RunnerLayer({id: 'runners'}), buildingLayerId);

	updateStations();

	for (let i = teams.length - 1; i > 0; i--) {
		const team = teams[i],
			popup = new AnimatedPopup({anchor: 'top', closeButton: false}),
			element = document.createElement('div');

		element.className = 'marker';
		element.style.backgroundImage = `url('markers/${i}.png')`;

		element.addEventListener('mouseenter', event => {
			if (!popup.isOpen()) {
				team.marker.getPopup().setHTML(`${team.name}<br>${team.runners[trip * 5 + team.estimatedSection]}`);
				team.marker.togglePopup();
			}
		});

		element.addEventListener('mouseleave', event => {
			if (popup.isOpen()) {
				team.marker.togglePopup();
			}
		});

		element.addEventListener('click', event => {
			trackingTeam = i;
			if (autoTrackingMode) {
				lastViewSwitch = Date.now() - clockOffset;
			}
			startTrackingAnimation();
			showPanel();
			updateChart();

			canvasElement.focus();
			event.stopPropagation();
		});

		team.marker = new mapboxgl.Marker({element})
			.setLngLat([0, 0])
			.setPopup(popup)
			.addTo(map);
	}

	map.on('click', event => {
		trackingTeam = undefined;
		stopTrackingAnimation();
		hidePanel();
	});

	const updateScales = () => {
		const scaleValue = modelScale * 5 * Math.pow(2, 20 - Math.min(map.getZoom(), 20));

		for (let i = 1; i < teams.length; i++) {
			const {object, object2} = teams[i];

			if (object) {
				const {scale} = object;

				scale.x = scale.y = scale.z = scaleValue;
			}
			if (object2) {
				const {scale} = object2;

				scale.x = scale.y = scale.z = scaleValue;
			}
		}
	};

	map.on('zoom', updateScales);
	map.on('move', updateScales);
	map.on('resize', updateScales);

	const switchToNormalTrackingMode = event => {
		if (trackingTeam !== undefined && !event.auto) {
			document.querySelector('.menu div.active').classList.remove('active');
			document.getElementById('normal-view').classList.add('active');

			trackingMode = 'normal';
			autoTrackingMode = false;
		}
	};

	map.on('zoomstart', switchToNormalTrackingMode)
	map.on('rotatestart', switchToNormalTrackingMode)
	map.on('pitchstart', switchToNormalTrackingMode)

	map.on('pitch', () => {
		const pitchFactor = Math.sin(THREE.MathUtils.degToRad(map.getPitch())),
			zoomFactor = Math.pow(2, Math.max(map.getZoom(), 20) - 20),
			offset = [0, -75 * pitchFactor * zoomFactor];

		for (const {popup} of sections[trip]) {
			if (popup) {
				popup.setOffset(offset);
			}
		}
	})

	let lastClockRefresh = 0;
	let initialDataLoadComplete = false;

	const frame = () => {
		const now = Date.now() - clockOffset,
			transform = map.transform;

		if (now >= lastDataLoad + 10000) {
			const reset = now >= lastDataLoad + 20000;

			loadRunnerData(now, result => {
				for (const point of result.points) {
					const now = Date.now() - clockOffset;
					const id = point[0];
					const lat = point[1];
					const lng = point[2];
					let distance = point[5];
					let speed = point[6];
					const position = point[7];
					const section = point[8];
					let ts = point[9];
					const prevDistance = teams[id].distance;
					const prevSpeed = teams[id].speed;
					const prevTs = teams[id].ts;

					const history = teams[id].speedHistory[trip];
					if (result.status.sg === 0 && position !== null && (history.d.length === 0 || distance > history.d[history.d.length - 1])) {
						history.d.push(distance);
						history.s.push(speed);
					}

					if (!isNaN(prevDistance) && !isNaN(prevSpeed) && !isNaN(prevTs) && !reset) {
						const adjustedDistance = prevDistance + prevSpeed * (now - prevTs * 1000) / 3600000;
						const adjustedSpeed = (distance + speed * (now + 10000 - ts * 1000) / 3600000 - adjustedDistance) * 360;

						distance = adjustedDistance;
						speed = adjustedSpeed;
						ts = now / 1000;
					}

					if (result.status.sg === 1 || position === null) {
						distance = speed = 0;
					}

					if (trip === 0 && now < trips[trip].startTime + 340000) {
						teams[id].distance = teams[id]._speed * (now - trips[trip].startTime) / 3600000;
						teams[id].speed = teams[id]._speed;
						teams[id].ts = now / 1000;
					} else {
						Object.assign(teams[id], {
							lat,
							lng,
							distance,
							speed,
							section,
							ts
						});
					}
				}
				if (!initialDataLoadComplete) {
					if (teams[placing[0]].distance <= 0) {
						trackingTeam = placing[0];
						showPanel();
					} else {
						setTimeout(() => {
							setInteractions(false);
							map.flyTo({
								center: turf.getCoord(turf.along(routeFeatures[trip], teams[placing[0]].estimatedDistance + 0.1)),
								zoom: 17,
								bearing: (teams[placing[0]].bearing + 360) % 360 - 180,
								pitch: 60,
								easing: t => t,
								speed: 0.5
							}, {
								auto: true
							});
							map.once('moveend', () => {
								trackingTeam = placing[0];
								trackingMode = 'front';
								lastViewSwitch = Date.now() - clockOffset;
								startTrackingAnimation();
								showPanel();
								setInteractions(true);
							});
						}, 3000);
					}
					initialDataLoadComplete = true;
				}
				updateChart();
				updatePlacing();
				if (autoPaging && trackingTeam !== undefined && trackingTeam !== placing[0]) {
					trackingTeam = placing[0];
					if (!autoTrackingMode) {
						startTrackingAnimation();
					}
				}
			});

			if (reset) {
				fetch(`https://mini-tokyo.appspot.com/hakone?q=speed-${trip}`)
					.then(response => response.json())
					.then(result => {
						for (let i = 1; i < result.length; i++) {
							teams[i].speedHistory[trip] = result[i];
						}
						updateChart();
					})
			}

			lastDataLoad = now;
		}

		updateModelOrigin(map.getCenter());

		for (let i = 1; i < teams.length; i++) {
			const team = teams[i];
			if (!isNaN(team.distance) && !isNaN(team.speed) && !isNaN(team.ts)) {
				const distance = team.estimatedDistance = clamp(team.distance + team.speed * (now - team.ts * 1000) / 3600000, 0, sections[trip][5].distance + 0.02),
					point = turf.along(routeFeatures[trip], distance),
					point2 = turf.along(routeFeatures[trip], distance + 0.001),
					bearing = team.bearing = turf.bearing(point, point2),
					point3 = turf.destination(point, team.offset / 1000, bearing + 90),
					coord = team.coord = turf.getCoord(point3),
					section = team.estimatedSection = getSection(distance);

				const p1 = map.project(coord);
					p2 = transform._coordinatePoint(transform.locationCoordinate(mapboxgl.LngLat.convert(coord), Math.pow(2, 20 - Math.min(map.getZoom(), 20)) * 4), true);
				team.marker.setLngLat(coord).setOffset([p2.x - p1.x, p2.y - p1.y - 35]);

				if (team.object) {
					const elevation = map.queryTerrainElevation(coord),
						mCoord = mapboxgl.MercatorCoordinate.fromLngLat(coord, elevation);

					team.object.position.x = mCoord.x - modelOrigin.x;
					team.object.position.y = -(mCoord.y - modelOrigin.y);
					team.object.position.z = mCoord.z - modelOrigin.z;
					team.object.rotation.z = THREE.MathUtils.degToRad(-bearing);

					team.object.visible = distance < sections[trip][5].distance + 0.02;
				}
				if (team.object2) {
					const baseDistance = sections[trip][section].distance,
						nextDistance = sections[trip][section + 1].distance;

					if (section < 4 && nextDistance - distance <= 0.1) {
						const point4 = turf.along(routeFeatures[trip], nextDistance),
							point5 = turf.along(routeFeatures[trip], nextDistance - 0.001),
							bearing2 = turf.bearing(point4, point5),
							point6 = turf.destination(point4, team.offset / 1000, bearing2 - 90),
							coord2 = turf.getCoord(point6),
							elevation = map.queryTerrainElevation(coord2),
							mCoord = mapboxgl.MercatorCoordinate.fromLngLat(coord2, elevation);

						team.object2.position.x = mCoord.x - modelOrigin.x;
						team.object2.position.y = -(mCoord.y - modelOrigin.y);
						team.object2.position.z = mCoord.z - modelOrigin.z;
						team.object2.rotation.z = THREE.MathUtils.degToRad(-bearing2);
						team.object2.userData.actions[0].weight = 0;
						team.object2.userData.actions[1].weight = 1;
						team.object2.userData.duration = 40 / 24;
						team.object2.visible = true;
					} else if (section > 0 && distance - baseDistance <= 0.02) {
						const point4 = turf.along(routeFeatures[trip], baseDistance),
							point5 = turf.along(routeFeatures[trip], baseDistance + 0.001),
							bearing2 = turf.bearing(point4, point5),
							point6 = turf.destination(point4, team.offset / 1000, bearing2 + 90),
							point7 = turf.destination(point6, distance - baseDistance, bearing2 - 45),
							coord2 = turf.getCoord(point7),
							elevation = map.queryTerrainElevation(coord2),
							mCoord = mapboxgl.MercatorCoordinate.fromLngLat(coord2, elevation);

						team.object2.position.x = mCoord.x - modelOrigin.x;
						team.object2.position.y = -(mCoord.y - modelOrigin.y);
						team.object2.position.z = mCoord.z - modelOrigin.z;
						team.object2.rotation.z = THREE.MathUtils.degToRad(-(bearing2 - 45));
						team.object2.userData.actions[0].weight = 1;
						team.object2.userData.actions[1].weight = 0;
						team.object2.userData.duration = 20 / 24;
						team.object2.visible = true;
					} else {
						team.object2.visible = false;
					}
				}

				if (!trackingAnimationID && trackingTeam === i && !map._zooming && !map._rotating && !map._pitching) {
					jumpTo({
						center: coord,
						bearing,
						bearingFactor: .02
					});
				}

				if (i === trackingTeam || (i === placing[0] && trackingTeam === undefined)) {
					const baseDistance = sections[trip][section].distance,
						nextDistance = sections[trip][section + 1].distance;

					tripTextElement.innerText = trips[trip].name;
					sectionTextElement.innerText = trip * 5 + section + 1;
					distanceTextElement.innerText = (distance - baseDistance).toFixed(2);
					distanceBarElement.style.width = `${(distance - baseDistance) / (nextDistance - baseDistance) * 100}%`;

					if (i === trackingTeam) {
						showTrackingInfo();
						trackingMarkerElement.style.backgroundImage = `url('markers/${i}.png')`;
						trackingTeamTextElement.innerText = teams[i].name;
						trackingRunnerTextElement.innerText = teams[i].runners[trip * 5 + section];

						if (chartSection !== section) {
							updateChart();
						}
					} else {
						hideTrackingInfo();
					}
				}
			}
		}

		if (trackingTeam && now >= lastViewSwitch + 30000) {
			if (autoPaging) {
				swiper.slideTo((swiper.activeIndex + 1) % 2);
			}

			if (autoTrackingMode) {
				if (now > trips[trip].startTime - 33000 && now <= trips[trip].startTime) {
					trackingMode = 'front';
				} else {
					trackingMode = trackingModes[Math.floor(Math.random() * (trackingModes.length - 2)) + 2];
				}
				startTrackingAnimation();
			}

			lastViewSwitch = now;
		}

		if (Math.floor(now / 1000) !== Math.floor(lastClockRefresh / 1000)) {
			clockElement.innerText = new Date(now).toLocaleTimeString('ja-JP', {timeZone: 'JST'});
			sliderElement.value = now - trips[trip].startTime;
			lastClockRefresh = now;
		}

		requestAnimationFrame(frame);
	};

	frame();
});
